<!DOCTYPE html>
<html>

<head>

    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">
    <link rel="stylesheet" href="/public/userAssets/css/profileAsset/orderDetails.css">
</head>

<body>

    <div class="order-details-container">

        <div class="order-header">
            <div>
                <h2>Order id: #<%= order._id.toString().slice(-8) %>
                </h2>
                <p>Placed on <%= new Date(order.createdAt).toLocaleDateString('en-US', { day: 'numeric' , month: 'long'
                        , year: 'numeric' }) %>
                </p>
            </div>
            <span class="status-badge status-<%= order.status.toLowerCase() %>">
                <%= order.status %>
            </span>
        </div>
 
        <div class="tracking-container">
            <div class="tracking-line">
                <div class="tracking-line-progress"></div>
            </div>
            <div class="tracking-steps">
                <div class="tracking-step">
                    <div
                        class="step-icon <%= ['Processing', 'Shipped', 'Delivered'].includes(order.status) ? 'completed' : '' %>">
                        <i class="fas fa-box"></i>
                    </div>
                    <span>Order Placed</span>
                </div>
                <div class="tracking-step">
                    <div class="step-icon <%= ['Shipped', 'Delivered'].includes(order.status) ? 'completed' : 
                        order.status === 'Processing' ? 'current' : '' %>">
                        <i class="fas fa-warehouse"></i>
                    </div>
                    <span>Processing</span>
                </div>
                <div class="tracking-step">
                    <div class="step-icon <%= order.status === 'Delivered' ? 'completed' : 
                        order.status === 'Shipped' ? 'current' : '' %>">
                        <i class="fas fa-truck"></i>
                    </div>
                    <span>Shipped</span>
                </div>
                <div class="tracking-step">
                    <div class="step-icon <%= order.status === 'Delivered' ? 'completed' : '' %>">
                        <i class="fas fa-check-circle"></i>
                    </div>
                    <span>Delivered</span>
                </div>
            </div>
        </div>

        <div class="order-items">
            <h3>Order Items</h3>
            <% order.items.forEach(item=> { %>
                <div class="item-card">
                    <img src="<%= item.productId.images[0] %>" alt="<%= item.productId.name %>" class="item-image">
                    <div class="item-details">
                        <h4>
                            <%= item.productId.name %>
                        </h4>
                        <p>Quantity: <%= item.quantity %>
                        </p>
                        <p>Price: ₹<%= item.price.toFixed(2) %>
                        </p>
                    </div>
                </div>
                <% }); %>
        </div>

        <div class="delivery-info">
            <div class="info-grid">

                <div class="info-box">
                    <h4>Payment Information</h4>
                    <p>Method: <%= order.paymentMethod %>
                    </p>
                    <p>Status: <%= order.paymentStatus %>
                    </p>
                </div>
                <span>
                    <div class="info-box">
                        <h4>shipping Address</h4>
                        <% if (selectedAddress) { %>
                            <p>House Name : <%= selectedAddress.houseNumber %></p>
                            <p>Landmark : <%= selectedAddress.landmark ? selectedAddress.landmark : 'N/A' %></p>
                            <p>Pincode : <%= selectedAddress.pincode %></p>
                            <p>City : <%= selectedAddress.city %></p>
                            <p>Country : <%= selectedAddress.country %></p>
                           
                            
                        <% } else { %>
                            <p style="color: red;">Address not found</p>
                        <% } %>
                    </div>
                </span>
            </div>
        </div> 
 
        <div class="price-summary">
            <div class="price-row">
                <span>Subtotal</span>
                <span>₹<%= order.totalAmount.toFixed(2) %></span>
            </div>
            <% if (order.discount> 0) { %>
                <div class="price-row">
                    <span>Discount</span>
                    <span>-₹<%= order.discount.toFixed(2) %></span>
                </div>
                <% } %>
                    <div class="price-row">
                        <span>Shipping</span>
                        <span>₹0.00</span>
                    </div>
                    <div class="price-row total-row">
                        <span>Total</span>
                        <span>₹<%= (order.totalAmount - order.discount).toFixed(2) %></span>
                    </div>
                    <div class="row mt-4 mb-5 d-flex justify-content-center">
                        <div class="col-12 text-center">
                            <button type="button" class="btn h" onclick="backToOrder()">
                                <i class="fas fa-arrow-left me-2"></i>Back to Orders
                            </button>


                        </div>
                        <div style="display: flex; justify-content: center; margin: 20px 0;">
                            <% if (order.status === 'Delivered') { %>
                                <% if (returnOrder && returnOrder.returnStatus === 'Rejected') { %>
                                    <button type="button" class="return-trigger-btn btn-danger">
                                        <i class="fas fa-exclamation-triangle"></i>
                                        Your return was rejected
                                    </button>
                                    <% }else if(returnOrder && returnOrder.returnStatus === 'Approved'){ %>
                                        <button type="button" class="return-trigger-btn btn-success" style="background: #48c779;">
                                            <i class="fas fa-check-circle"></i>
                                            return order Approved
                                        </button>
                                <% } else { %>
                                    <button type="button" class="return-trigger-btn" onclick="openReturnModal()">
                                        <i class="fas fa-undo-alt"></i>
                                        Return Order
                                    </button>
                                <% } %>
                            <% } %>
                        </div>
                    </div>
        </div>
    </div>

    <!-- Return Modal -->
    <div id="returnModal" class="return-modal">
        <div class="return-modal-content">
            <div class="return-modal-header">
                <i class="fas fa-box-open"></i>
                <h4>Request Return</h4>
                <button class="close-modal" onclick="closeReturnModal()">
                    <i class="fas fa-times"></i>
                </button>
            </div>

            <div class="return-modal-body">
                <form id="returnForm" onsubmit="submitReturn(event)">
                    <input type="hidden" name="orderId" value="<%= order._id %>">

                    <div class="form-group">
                        <label>Select Return Reason</label>
                        <div class="reason-options">
                            <label class="reason-option">
                                <input type="radio" name="returnReason" value="wrong_item" required>
                                <span class="reason-content">
                                    <i class="fas fa-exchange-alt"></i>
                                    <div>
                                        <h6>Wrong Item</h6>
                                        <p>Received different item than ordered</p>
                                    </div>
                                </span>
                            </label>

                            <label class="reason-option">
                                <input type="radio" name="returnReason" value="damaged">
                                <span class="reason-content">
                                    <i class="fas fa-bomb"></i>
                                    <div>
                                        <h6>Damaged/Defective</h6>
                                        <p>Item arrived damaged or not working</p>
                                    </div>
                                </span>
                            </label>

                            

                            <label class="reason-option">
                                <input type="radio" name="returnReason" value="quality">
                                <span class="reason-content">
                                    <i class="fas fa-star-half-alt"></i>
                                    <div>
                                        <h6>Quality Issue</h6>
                                        <p>Quality not as expected</p>
                                    </div>
                                </span>
                            </label>
                        </div>
                    </div>

                    <div class="form-group">
                        <label>Additional Details</label>
                        <textarea name="description"
                            placeholder="Please provide more details about your return request..." required></textarea>
                    </div>

                    <div class="modal-actions">
                        <button type="button" class="btn-secondary" onclick="closeReturnModal()">
                            Cancel
                        </button>
                        <button type="submit" class="btn-primary">
                            Submit Return Request
                        </button>
                    </div>
                </form>
            </div>
        </div>
    </div>

    <script>



        document.addEventListener('DOMContentLoaded', function () {

            const currentStatus = '<%= order.status %>';

            // Define status order
            const statusOrder = ['Pending', 'Processing', 'Shipped', 'Delivered'];
            const currentStatusIndex = statusOrder.indexOf(currentStatus);

            // Calculate progress percentage
            const progress = (currentStatusIndex + 1) * (100 / statusOrder.length);

            // Animate progress line after a short delay
            setTimeout(() => {
                const progressLine = document.querySelector('.tracking-line-progress');
                progressLine.style.width = `${progress}%`;
            }, 500);

            // Add completed class to steps
            const steps = document.querySelectorAll('.tracking-step');
            steps.forEach((step, index) => {
                const stepIcon = step.querySelector('.step-icon');
                const stepLabel = step.querySelector('span');

                setTimeout(() => {
                    if (index <= currentStatusIndex) {
                        stepIcon.classList.add('completed');
                        stepLabel.classList.add('completed');

                        // Add animation for current step
                        if (index === currentStatusIndex) {
                            stepIcon.classList.add('current');
                        }
                    }
                }, index * 600); // Stagger the animations
            });

            // Function to update status
            window.updateOrderStatus = function (newStatus) {
                const statusBadge = document.querySelector('.status-badge');
                statusBadge.className = `status-badge status-${newStatus.toLowerCase()} status-update`;
                statusBadge.textContent = newStatus;

                // Update progress based on new status
                const newStatusIndex = statusOrder.indexOf(newStatus);
                const newProgress = (newStatusIndex + 1) * (100 / statusOrder.length);

                const progressLine = document.querySelector('.tracking-line-progress');
                progressLine.style.width = `${newProgress}%`;

                // Update step icons
                steps.forEach((step, index) => {
                    const stepIcon = step.querySelector('.step-icon');
                    const stepLabel = step.querySelector('span');

                    if (index <= newStatusIndex) {
                        stepIcon.classList.add('completed');
                        stepLabel.classList.add('completed');
                    } else {
                        stepIcon.classList.remove('completed');
                        stepLabel.classList.remove('completed');
                    }

                    // Update current step
                    if (index === newStatusIndex) {
                        stepIcon.classList.add('current');
                    } else {
                        stepIcon.classList.remove('current');
                    }
                });
            };
        });

        // Add this if you want to test status updates
        function simulateStatusUpdate() {
            const statusOrder = ['Pending', 'Processing', 'Shipped', 'Delivered'];
            let currentIndex = statusOrder.indexOf('<%= order.status %>');

            const interval = setInterval(() => {
                currentIndex++;
                if (currentIndex >= statusOrder.length) {
                    clearInterval(interval);
                    return;
                }
                updateOrderStatus(statusOrder[currentIndex]);
            }, 3000);
        }


        function backToOrder() {
            window.location.href = ('/user/myProfile')
        }

        function openReturnModal() {
            document.getElementById('returnModal').style.display = 'block';
            document.body.style.overflow = 'hidden';
        }

        function closeReturnModal() {
            document.getElementById('returnModal').style.display = 'none';
            document.body.style.overflow = 'auto';
        }

        function submitReturn(event) {
    event.preventDefault(); 

    const form = event.target;
    const formData = new FormData(form);
    const orderId ='<%= order._id %>';

    const returnData = {
        orderId: orderId,  
        returnReason: formData.get('returnReason'),
        description: formData.get('description')
    };


    console.log("Return Data Sent:", returnData); 

    Swal.fire({
    title: "Are you sure?",
    text: "Do you want to request a return?",
    icon: "warning",
    showCancelButton: true,
    confirmButtonColor: "#3085d6",
    cancelButtonColor: "#d33",
    confirmButtonText: "Yes, request it!"
}).then((result) => {
    if (result.isConfirmed) {
        fetch('/user/request-return', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify(returnData)
        })
        .then(response => response.json())
        .then(data => {
            console.log("Server Response:", data);
            if (data.success) {
                Swal.fire(
                    "Success!",
                    "Return request submitted successfully!",
                    "success"
                ).then(() => {
                    window.location.reload();
                });
            } else {
                Swal.fire(
                    "Error!",
                    "Failed to submit return request: " + data.message,
                    "error"
                );
            }
        })
        .catch(error => {
            Swal.fire("Error!", "Something went wrong!", "error");
        });
    }
});

}
        
        window.onclick = function (event) {
            if (event.target == document.getElementById('returnModal')) {
                closeReturnModal();
            }
        }
    </script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
</body>

</html>
