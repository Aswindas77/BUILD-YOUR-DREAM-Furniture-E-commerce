<!DOCTYPE html>
<html lang="en">

<head>
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">

	<link rel="shortcut icon" href="/public/userAssets/images/favicon.png">

	<meta name="author" content="CodePixar">

	<meta name="description" content="">

	<meta name="keywords" content="">

	<meta charset="UTF-8">

	<title>BUILD YOUR DREAM | Buy Modern Furniture Online</title>


    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" rel="stylesheet">

    <link rel="stylesheet" href="/public/userAssets/css/profileAsset/updateProfile.css">

</head>

<body>
    <div class="container">
        <div class="sidebar">
            <div class="dashboard-header"> 
                <h2><i class=""></i>Profile</h2>
            </div>
            <nav class="nav-menu">
                <!-- <a href="#" class="nav-item ">
                    <i class="fas fa-chart-line"></i>
                    <span>Dashboard</span>
                </a> -->
                <a href="/user/myProfile" class="nav-item ">
                    <i class="fas fa-shopping-bag"></i>
                    <span>Orders</span>
                </a>
                <a href="/user/updateProfile" class="nav-item active">
                    <i class="fas fa-user"></i>
                    <span>Update Profile</span>
                </a>
                <a href="/user/useraddress" class="nav-item">
                    <i class="fas fa-map-marker-alt"></i>
                    <span>My Address</span>
                </a>
                <a href="/user/wallet" class="nav-item">
                    <i class="fas fa-wallet"></i>
                    <span>Wallet</span>
                </a>
                <a href="/user" class="nav-item logout">
                    <i class="fas fa-sign-out-alt"></i>
                    <span>home</span>
                </a>
            </nav>
        </div>
        <main class="main-content">
            <div class="profile-header">
                <div class="profile-pic" id="profile-pic">
                    <!-- Default initials -->
                    <h6> profile</h6>
                    <!-- Edit icon -->
                    <div class="profile-pic-edit">
                        <i class="fas fa-camera"></i>
                    </div>
                    <!-- File input for uploading images -->
                    <input type="file" id="profile-upload" accept="image/*" style="display: none;" />
                </div>
                <div class="profile-info">
                    <h1>ðŸ‘‹ Hello, <%= user.username %>
                    </h1>
                </div>
            </div>

            <div class="profile-form">
                <h2>Personal Information</h2>
                <form class="form-grid">
                    <input type="hidden" id="userId" value="<%= user._id %>">

                    <!-- Username field -->
                    <div class="stacked">
                        <div class="form-group">
                            <label>Username</label>
                            <input type="text" id="username" value="<%=user.username%>" />
                            <div class="error-message" id="usernameError"></div>
                        </div>
                    </div>

                    <!-- Email field -->
                    <div class="form-group">
                        <label>Email Address</label>
                        <input type="email" id="email" value="<%=user.email%>" />
                        <div class="error-message" id="emailError"></div>
                    </div>

                    <!-- Phone field -->
                    <div class="form-group">
                        <label>Phone Number</label>
                        <input type="tel" id="phone"
                            value="<%= typeof user !== 'undefined' && user.phone ? user.phone : '' %>"
                            placeholder="Enter phone number" />
                        <div class="error-message" id="phoneError"></div>
                    </div>
                </form>

                <button class="btn">Save Changes</button>
                <button id="i" type="button" class="btn">Change Password</button>
            </div>
        </main>
    </div>

    <div class="modal" id="saveChangesModal">
        <div class="modal-content">
            <h3>Confirm Password</h3>
            <div class="form-group">
                <label for="confirmSavePassword">Enter your password to save changes</label>
                <input type="password" id="confirmSavePassword" placeholder="Enter your password">
                <span class="error-message" id="savePasswordError"></span>
            </div>
            <div class="modal-buttons">
                <button type="button" class="btn" onclick="verifyAndSaveChanges()">Confirm</button>
                <button type="button" class="btn-cancel" onclick="closeModal('saveChangesModal')">Cancel</button>
            </div>
        </div>
    </div>

    <!-- Change Password Modal -->
    <div class="modal" id="changePasswordModal">
        <div class="modal-content">
            <h3>Change Password</h3>
            <div class="form-group">
                <label for="currentPassword">Current Password</label>
                <input type="password" id="currentPassword" placeholder="Enter current password">
                <span class="error-message" id="currentPasswordError"></span>
            </div>
            <div class="form-group">
                <label for="newPassword">New Password</label>
                <input type="password" id="newPassword" placeholder="Enter new password">
                <span class="error-message" id="newPasswordError"></span>
            </div>
            <div class="form-group">
                <label for="confirmNewPassword">Confirm New Password</label>
                <input type="password" id="confirmNewPassword" placeholder="Confirm new password">
                <span class="error-message" id="confirmPasswordError"></span>
            </div>
            <div class="modal-buttons">
                <button type="button" class="btn" onclick="changePassword()">Change Password</button>
                <button type="button" class="btn-cancel" onclick="closeModal('changePasswordModal')">Cancel</button>
            </div>
        </div>
    </div>

    <div class="menu-toggle">
        <i class="fas fa-bars"></i>
    </div>


    <script>
        const menuToggle = document.querySelector('.menu-toggle');
        const sidebar = document.querySelector('.sidebar');

        menuToggle.addEventListener('click', () => {
            sidebar.classList.toggle('active');
        });

        document.addEventListener("DOMContentLoaded", function () {
            const profilePic = document.getElementById("profile-pic");
            const profileUpload = document.getElementById("profile-upload");

            profilePic.addEventListener("click", () => {
                profileUpload.click();
            });

            profileUpload.addEventListener("change", function (event) {
                const file = event.target.files[0];
                if (file) {
                    const reader = new FileReader();
                    reader.onload = function (e) {
                        profilePic.innerHTML = "";

                        const img = document.createElement("img");
                        img.src = e.target.result;
                        profilePic.appendChild(img);

                        const editIcon = document.createElement("div");
                        editIcon.className = "profile-pic-edit";
                        editIcon.innerHTML = '<i class="fas fa-camera"></i>';
                        profilePic.appendChild(editIcon);
                    };
                    reader.readAsDataURL(file);
                }
            });

            document.querySelector(".btn").addEventListener("click", (event) => {
                if (!validateForm()) {
                    event.preventDefault();
                } else {
                    const modal = document.getElementById("saveChangesModal");
                    if (modal) {
                        modal.style.display = "block";
                        modal.querySelectorAll("input").forEach(input => input.value = "");
                        modal.querySelectorAll(".error-message").forEach(error => error.style.display = "none");
                    } else {
                        console.error("Modal with id saveChangesModal not found");
                    }
                }
            });

            document.getElementById("i").addEventListener("click", function (e) {
                e.preventDefault();
                const modal = document.getElementById("changePasswordModal");
                if (modal) {
                    modal.style.display = "block";
                    modal.querySelectorAll("input").forEach(input => input.value = "");
                    modal.querySelectorAll(".error-message").forEach(error => error.style.display = "none");
                } else {
                    console.error("Modal with id changePasswordModal not found");
                }
            });
        });

        function closeModal(modalId) {
            const modal = document.getElementById(modalId);
            if (modal) {
                modal.style.display = "none";
            }
        }

        function validateEmail(email) {
            const emailRegex = /^[a-zA-Z0-9._-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}$/;
            return emailRegex.test(email.trim());
        }

        function validatePhone(phone) {
            const phoneRegex = /^[6-9]\d{9}$/;
            return phoneRegex.test(phone.trim());
        }

        function showError(input, message) {
            try {
                if (!input) {
                    console.error('Input element is null');
                    return;
                }

                const errorId = input.id + 'Error';
                console.log('Looking for error element with ID:', errorId);

                const errorElement = document.getElementById(errorId);
                if (!errorElement) {
                    console.error(`Error element with id ${errorId} not found`);
                    return;
                }

                errorElement.textContent = message;
                errorElement.style.display = "block";
                errorElement.classList.add('show');
                input.classList.add("input-error");
            } catch (error) {
                console.error('Error in showError function:', error);
            }
        }

        function clearError(input) {
            try {
                if (!input) {
                    console.error('Input element is null');
                    return;
                }

                const errorId = input.id + 'Error';
                const errorElement = document.getElementById(errorId);
                if (!errorElement) {
                    console.error(`Error element with id ${errorId} not found`);
                    return;
                }

                errorElement.textContent = "";
                errorElement.style.display = "none";
                errorElement.classList.remove('show');
                input.classList.remove("input-error");
            } catch (error) {
                console.error('Error in clearError function:', error);
            }
        }

        function validateForm() {
            const emailInput = document.getElementById("email");
            const phoneInput = document.getElementById("phone");
            let isValid = true;

            if (!emailInput || !phoneInput) {
                console.error('Required input elements not found');
                return false;
            }

            
            clearError(emailInput);
            clearError(phoneInput);

            
            if (!emailInput.value.trim()) {
                showError(emailInput, "Email address is required.");
                isValid = false;
            } else if (!validateEmail(emailInput.value)) {
                showError(emailInput, "Please enter a valid email address.");
                isValid = false;
            }

            
            if (!phoneInput.value.trim()) {
                showError(phoneInput, "Phone number is required.");
                isValid = false;
            } else if (!validatePhone(phoneInput.value)) {
                showError(phoneInput, "Please enter a valid 10-digit phone number starting with 6-9.");
                isValid = false;
            }

            return isValid;
        }

        
        document.addEventListener('DOMContentLoaded', function () {
            const requiredElements = ['email', 'phone', 'emailError', 'phoneError'];
            requiredElements.forEach(id => {
                const element = document.getElementById(id);
                if (!element) {
                    console.error(`Required element with id "${id}" not found`);
                }
            });
        });

       
        function showModal(modalId) {
            const modal = document.getElementById(modalId);
            if (modal) {
                modal.style.display = 'block';
                
                modal.querySelectorAll('input').forEach(input => input.value = '');
                modal.querySelectorAll('.error-message').forEach(error => error.style.display = 'none');
            } else {
                console.error(`Modal with id ${modalId} not found`);
            }
        }

        function closeModal(modalId) {
            const modal = document.getElementById(modalId);
            if (modal) {
                modal.style.display = 'none';
            }
        }

        
        function verifyAndSaveChanges() {
            if (!validateForm()) {
                return;
            }

            const password = document.getElementById('confirmSavePassword').value;
            const errorElement = document.getElementById('savePasswordError');

            
            const updatedData = {
                username: document.querySelector('input[type="text"]').value.trim(),
                email: document.querySelector('input[type="email"]').value.trim(),
                phone: document.querySelector('input[type="tel"]').value.trim(),
                password: password
            };

            fetch('/user/updateProfile', {
                method: 'PATCH',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify(updatedData)
            })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        Swal.fire({
                            title: 'Success!',
                            text: "profile updated successfully",
                            icon: 'success',
                            confirmButtonColor: '#FF6F00'
                        }).then(()=>{
                            closeModal('saveChangesModal');
                        }).then(()=>{
                           location.reload();
                        })
                       
                        
                    } else {
                        errorElement.textContent = data.message || 'Incorrect password';
                        errorElement.style.display = 'block';
                    }
                })
                .catch(error => {
                    errorElement.textContent = 'Error updating profile';
                    errorElement.style.display = 'block';
                });
        }

        
        function changePassword() {
            const currentPassword = document.getElementById('currentPassword').value;
            const newPassword = document.getElementById('newPassword').value;
            const confirmPassword = document.getElementById('confirmNewPassword').value;

            
            document.querySelectorAll('.error-message').forEach(error => error.style.display = 'none');

            
            if (!currentPassword || !newPassword || !confirmPassword) {
                showError('currentPasswordError', 'All fields are required');
                return;
            }

            if (newPassword !== confirmPassword) {
                showError('confirmPasswordError', 'New passwords do not match');
                return;
            }

            
            fetch('/user/updatePassword', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({
                    currentPassword,
                    newPassword,
                    confirmPassword
                })
            })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        Swal.fire({
                            title: 'Success!',
                            text: data.message,
                            icon: 'success',
                            confirmButtonColor: '#FF6F00'
                        }).then(() => {
                            closeModal('changePasswordModal');
                        });
                    } else {
                        console.log(data.message)
                        showError('currentPasswordError', data.message || 'Failed to change password');
                    }
                })
                .catch(error => {
                    showError('currentPasswordError', 'Error changing password');
                    console.error('Error:', error);
                });
        }

        function showError(elementId, message) {
    const errorElement = document.getElementById(elementId);
    errorElement.textContent = message;
    errorElement.style.display = 'block';
}


    </script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
</body>

</html>