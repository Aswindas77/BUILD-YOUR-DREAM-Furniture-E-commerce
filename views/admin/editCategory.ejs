<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Update Category</title>
    <!-- Add SweetAlert2 -->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/sweetalert2/11.10.5/sweetalert2.all.min.js"></script>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/sweetalert2/11.10.5/sweetalert2.min.css">
    <link rel="stylesheet" href="/public/adminAssets/css/editCat.css">
</head>

<body>
    <div class="container">
        <h1>Edit Category</h1>
        <form method="post" action="updatecategory" onsubmit="return handleSubmit(event)" id="add-category-form">
            <!-- hidden input -->
            <input hidden type="text" name="id" value="<%= category._id%>">
            <div class="form-group">
                <input type="text" id="category-name" name="name" value="<%= category.name %>" placeholder=" " >
                <label for="category-name">Category Name</label>
            </div>
            <div class="form-group">
                <textarea id="category-description" name="description" placeholder=" "
                    required><%= category.description %></textarea>
                <label for="category-description">Category Description</label>
            </div>
            <div class="mt-3">

                <label for="categoryOffer" class="form-label">Offer Percentage</label>
                <input type="number" class="form-control" id="categoryOffer" name="categoryOffer"
                    value="<%= category.offerPercentage %>" step="1">
            </div>
            <div class="mt-3">

                <label for="minPrice" class="form-label">Minimum Price</label>
                <input type="number" class="form-control" id="minPrice" name="minimumPrice"
                    value="<%= category.minimumPrice %>" step="1" >
            </div>
            <div class="mt-3">

                <label for="claimableAmount" class="form-label">Claimable Amount</label>
                <input type="number" class="form-control" id="claimableAmount" name="claimableAmount"
                    value="<%= category.claimableAmount %>" step="1" >
            </div>

            <button type="submit" id="btn-submit" class="btn">Update Category</button>
        </form>
        <div class="note">* Ensure all fields are filled before submitting.</div>
    </div>

    <script>
        async function handleSubmit(event) {
            event.preventDefault();

            const categoryName = document.getElementById('category-name').value;
            const categoryDescription = document.getElementById('category-description').value;
            const categoryOffer = document.getElementById('categoryOffer').value;
            const minimumPrice = document.getElementById('minPrice').value;
            const claimableAmount = document.getElementById('claimableAmount').value;

            if (!categoryName.trim() || !categoryDescription.trim()) {
                await Swal.fire({
                    icon: 'error',
                    title: 'Validation Error',
                    text: 'Please fill in all fields',
                    confirmButtonColor: '#007bff'
                });
                return false;
            }

            if (categoryOffer && (categoryOffer < 0 || categoryOffer > 100 || isNaN(categoryOffer))) {
                await Swal.fire({
                    icon: 'error',
                    title: 'Invalid Offer Percentage',
                    text: 'Offer percentage must be a number between 0 and 100.',
                    confirmButtonColor: '#007bff'
                });
                return false;
            }

            if (!minimumPrice || minimumPrice < 0 || isNaN(minimumPrice)) {
                await Swal.fire({
                    icon: 'error',
                    title: 'Invalid Minimum Price',
                    text: 'Minimum price must be a non-negative number.',
                    confirmButtonColor: '#007bff'
                });
                return false;
            }

            if (!claimableAmount || claimableAmount < 0 || isNaN(claimableAmount)) {
                await Swal.fire({
                    icon: 'error',
                    title: 'Invalid Claimable Amount',
                    text: 'Claimable amount must be a non-negative number.',
                    confirmButtonColor: '#007bff'
                });
                return false;
            }

            await Swal.fire({
                icon: 'success',
                title: 'Success!',
                text: 'Category updated successfully',
                confirmButtonColor: '#007bff',
                timer: 2000,
                showConfirmButton: false
            });


            document.getElementById('add-category-form').submit();
            return true;
        }


        if (typeof errorMessage !== 'undefined' && errorMessage) {
            Swal.fire({
                icon: 'error',
                title: 'Error',
                text: errorMessage,
                confirmButtonColor: '#007bff'
            });
        }
    </script>
</body>

</html>