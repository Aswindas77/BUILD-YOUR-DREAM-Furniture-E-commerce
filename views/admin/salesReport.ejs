<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Sales Report</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/daterangepicker/daterangepicker.css">
    <style>
        :root {
            --primary-color: #4a90e2;
            --secondary-color: #f8f9fa;
        }
 
        body {
            background-color: #f4f6f8;
            font-family: 'Segoe UI', sans-serif;
        }

        .report-container {
            max-width: 1200px;
            margin: 2rem auto;
            padding: 0 1rem;
        }

        .stats-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
            gap: 1.5rem;
            margin-bottom: 2rem;
        }

        .stat-card {
            background: white;
            border-radius: 15px;
            padding: 1.5rem;
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
            transition: transform 0.3s ease;
        }

        .stat-card:hover {
            transform: translateY(-5px);
        }

        .stat-icon {
            width: 50px;
            height: 50px;
            border-radius: 12px;
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 1.5rem;
            margin-bottom: 1rem;
        }

        .revenue-icon {
            background: #e3f2fd;
            color: #1976d2;
        }

        .orders-icon {
            background: #f3e5f5;
            color: #7b1fa2;
        }

        .products-icon {
            background: #e8f5e9;
            color: #388e3c;
        }

        .customers-icon {
            background: #fff3e0;
            color: #f57c00;
        }

        .stat-value {
            font-size: 1.8rem;
            font-weight: 600;
            margin-bottom: 0.5rem;
        }

        .stat-label {
            color: #666;
            font-size: 0.9rem;
        }

        .filters-section {
            background: white;
            border-radius: 15px;
            padding: 1.5rem;
            margin-bottom: 2rem;
            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
        }

        .date-range-picker {
            border: 1px solid #dee2e6;
            padding: 0.5rem 1rem;
            border-radius: 8px;
            cursor: pointer;
        }

        .report-table {
            background: white;
            border-radius: 15px;
            padding: 1.5rem;
            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
        }

        .table th {
            background: var(--secondary-color);
            border: none;
            padding: 1rem;
        }

        .table td {
            padding: 1rem;
            vertical-align: middle;
        }

        .status-badge {
            padding: 0.5rem 1rem;
            border-radius: 20px;
            font-weight: 500;
            font-size: 0.85rem;
        }

        .export-btn {
            background: linear-gradient(135deg, #4a90e2, #357abd);
            color: white;
            border: none;
            padding: 0.75rem 1.5rem;
            border-radius: 8px;
            transition: all 0.3s ease;
        }

        .export-btn:hover {
            transform: translateY(-2px);
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
        }

        .chart-container {
            background: white;
            border-radius: 15px;
            padding: 1.5rem;
            margin-bottom: 2rem;
            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
            height: 400px;
        }

        @media (max-width: 768px) {
            .stats-grid {
                grid-template-columns: repeat(2, 1fr);
            }
        }

        @media (max-width: 480px) {
            .stats-grid {
                grid-template-columns: 1fr;
            }
        }
    </style>
</head>

<body>
    <div class="report-container">
        <!-- Stats Overview -->
        <div class="stats-grid">
            <div class="stat-card">
                <div class="stat-icon revenue-icon">
                    <i class="fas fa-dollar-sign"></i>
                </div>
                <div class="stat-value">â‚¹<%= totalRevenue.toFixed(2) %>
                </div>
                <div class="stat-label">Total Revenue</div>
            </div>
            <div class="stat-card">
                <div class="stat-icon orders-icon">
                    <i class="fas fa-shopping-cart"></i>
                </div>
                <div class="stat-value">
                    <%= totalOrders %>
                </div>
                <div class="stat-label">Total Orders</div>
            </div>
            <div class="stat-card">
                <div class="stat-icon products-icon">
                    <i class="fas fa-box"></i>
                </div>
                <div class="stat-value">
                    <%= totalProducts %>
                </div>
                <div class="stat-label">Products Sold</div>
            </div>
            <div class="stat-card">
                <div class="stat-icon customers-icon">
                    <i class="fas fa-users"></i>
                </div>
                <div class="stat-value">
                    <%= totalCustomers %>
                </div>
                <div class="stat-label">Total Customers</div>
            </div>
        </div>

        <!-- Charts -->


        <!-- Filters -->
        <div class="filters-section">
            <div class="row align-items-center g-3">
                <!-- Filter Type Selector -->
                <div class="col-md-3">
                    <select class="form-select" id="filterType" onchange="toggleDateFilters()">
                        <option value="year">Yearly Report</option>
                        <option value="month">Monthly Report</option>
                        <option value="week">Weekly Report</option>
                        <option value="custom">Custom Date Range</option>
                    </select>
                </div>

                <!-- Year Filter -->
                <div class="col-md-3 filter-input" id="yearFilter">
                    <select class="form-select" id="selectedYear">
                        <% const currentYear=new Date().getFullYear(); %>
                            <% for(let year=currentYear; year>= currentYear-5; year--) { %>
                                <option value="<%= year %>">
                                    <%= year %>
                                </option>
                                <% } %>
                    </select>
                </div>

                <!-- Month Filter -->
                <div class="col-md-3 filter-input" id="monthFilter" style="display: none;">
                    <select class="form-select" id="selectedMonth">
                        <option value="1">January</option>
                        <option value="2">February</option>
                        <option value="3">March</option>
                        <option value="4">April</option>
                        <option value="5">May</option>
                        <option value="6">June</option>
                        <option value="7">July</option>
                        <option value="8">August</option>
                        <option value="9">September</option>
                        <option value="10">October</option>
                        <option value="11">November</option>
                        <option value="12">December</option>
                    </select>
                </div>

                <!-- Week Filter -->
                <div class="col-md-3 filter-input" id="weekFilter" style="display: none;">
                    <input type="week" class="form-control" id="selectedWeek">
                </div>

                <!-- Custom Date Range -->
                <div class="col-md-6 filter-input" id="customDateFilter" style="display: none;">
                    <div class="input-group">
                        <input type="date" class="form-control" id="startDate" placeholder="Start Date">
                        <span class="input-group-text">to</span>
                        <input type="date" class="form-control" id="endDate" placeholder="End Date">
                    </div>
                </div>

                <!-- Apply Filter Button -->
                <div class="col-md-2">
                    <button class="btn btn-primary w-100" onclick="applyFilter()">
                        <i class="fas fa-filter me-2"></i>Apply Filter
                    </button>
                </div>

                <!-- Export Button -->
                <div class="col-md-2">
                    <button class="export-btn w-100" onclick="exportReport()">
                        <i class="fas fa-download me-2"></i>Export
                    </button>
                </div>
            </div>
        </div>

        <!-- Sales Summary Table -->
        <div class="report-table">
            <table class="table">
                <thead>
                    <tr>
                        <th>Date</th>
                        <th>Total Orders</th>
                        <th>Total Sales</th>
                        <th>Revenue</th>
                        <th>Growth</th>
                        <!-- <th>Top Selling Product</th> -->
                    </tr>
                </thead>
                <tbody>
                    <% salesData.forEach(data=> { %>
                        <tr>
                            <td>
                                <%= data.date %>
                            </td>
                            <td>
                                <%= data.orderCount %>
                                    <small class="text-muted">
                                        <% if(data.orderGrowth> 0) { %>
                                            <span class="text-success">â†‘ <%= data.orderGrowth %>%</span>
                                            <% } else if(data.orderGrowth < 0) { %>
                                                <span class="text-danger">â†“ <%= Math.abs(data.orderGrowth) %>%</span>
                                                <% } else { %>
                                                    <span></span>
                                                    <% } %>
                                    </small>
                            </td>
                            <td>
                                <%= data.totalProducts %>
                                    <small class="text-muted">
                                        <% if(data.salesGrowth> 0) { %>
                                            <span class="text-success">â†‘ <%= data.salesGrowth %>%</span>
                                            <% } else if(data.salesGrowth < 0) { %>
                                                <span class="text-danger">â†“ <%= Math.abs(data.salesGrowth) %>%</span>
                                                <% } else { %>
                                                    <span></span>
                                                    <% } %>
                                    </small>
                            </td>
                            <td>
                                â‚¹<%= data.revenue.toFixed(2) %>
                                    <small class="text-muted">
                                        <% if(data.revenueGrowth> 0) { %>
                                            <span class="text-success">â†‘ <%= data.revenueGrowth %>%</span>
                                            <% } else if(data.revenueGrowth < 0) { %>
                                                <span class="text-danger">â†“ <%= Math.abs(data.revenueGrowth) %>%</span>
                                                <% } else { %>
                                                    <span>--</span>
                                                    <% } %>
                                    </small>
                            </td>
                            <td>
                                <div class="progress" style="height: 8px;">
                                    <div class="progress-bar <%= data.revenueGrowth >= 0 ? 'bg-success' : 'bg-danger' %>"
                                        role="progressbar"
                                        style="width: <%= Math.min(Math.abs(data.revenueGrowth), 100) %>%">
                                    </div>
                                </div>
                            </td>

                        </tr>
                        <% }); %>
                </tbody>
                <tfoot>
                    <tr class="table-dark">
                        <td><strong>Total</strong></td>
                        <td><strong>
                                <%= totalStats.orders %>
                            </strong></td>
                        <td><strong>
                                <%= totalStats.products %>
                            </strong></td>
                        <td><strong>â‚¹<%= totalStats.revenue.toFixed(2) %></strong></td>
                        <td colspan="2">
                            <strong>Avg. Growth:
                                <span class="<%= totalStats.avgGrowth >= 0 ? 'text-success' : 'text-danger' %>">
                                    <%= totalStats.avgGrowth>= 0 ? 'â†‘' : 'â†“' %>
                                        <%= Math.abs(totalStats.avgGrowth).toFixed(1) %>%
                                </span>
                            </strong>
                        </td>
                    </tr>
                </tfoot>
            </table>

        </div>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/js/bootstrap.bundle.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/moment/moment.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/daterangepicker/daterangepicker.min.js"></script>

    <script>
        // Initialize DateRangePicker
        $('#dateRange').daterangepicker({
            opens: 'left',
            locale: {
                format: 'MM/DD/YYYY'
            }
        });

        // Revenue Chart
        const revenueCtx = document.getElementById('revenueChart').getContext('2d');
        new Chart(revenueCtx, {
            type: 'line',
            data: {
                labels: '<%= JSON.stringify(revenueData.labels) %>',
                datasets: [{
                    label: 'Revenue',
                    data: '<%= JSON.stringify(revenueData.values) %>',
                    borderColor: '#4a90e2',
                    tension: 0.4
                }]
            },
            options: {
                responsive: true,
                maintainAspectRatio: false
            }
        });

        // Products Chart
        const productsCtx = document.getElementById('productsChart').getContext('2d');
        new Chart(productsCtx, {
            type: 'doughnut',
            data: {
                labels: '<%= JSON.stringify(productData.labels) %>',
                datasets: [{
                    data: '<%= JSON.stringify(productData.values) %>',
                    backgroundColor: [
                        '#4a90e2',
                        '#7b1fa2',
                        '#388e3c',
                        '#f57c00',
                        '#d32f2f'
                    ]
                }]
            },
            options: {
                responsive: true,
                maintainAspectRatio: false
            }
        });

        // Export Function
        function exportReport() {
            // Implement your export logic here
            console.log('Exporting report...');
        }

        function toggleDateFilters() {
            const filterType = document.getElementById('filterType').value;

            // Hide all filter inputs first
            document.querySelectorAll('.filter-input').forEach(el => el.style.display = 'none');

            // Show relevant filter based on selection
            switch (filterType) {
                case 'year':
                    document.getElementById('yearFilter').style.display = 'block';
                    break;
                case 'month':
                    document.getElementById('yearFilter').style.display = 'block';
                    document.getElementById('monthFilter').style.display = 'block';
                    break;
                case 'week':
                    document.getElementById('weekFilter').style.display = 'block';
                    break;
                case 'custom':
                    document.getElementById('customDateFilter').style.display = 'block';
                    break;
            }
        }

        function applyFilter() {
            const filterType = document.getElementById('filterType').value;
            let filterData = {};

            switch (filterType) {
                case 'year':
                    filterData = {
                        type: 'year',
                        year: document.getElementById('selectedYear').value
                    };
                    break;
                case 'month':
                    filterData = {
                        type: 'month',
                        year: document.getElementById('selectedYear').value,
                        month: document.getElementById('selectedMonth').value
                    };
                    break;
                case 'week':
                    filterData = {
                        type: 'week',
                        week: document.getElementById('selectedWeek').value
                    };
                    break;
                case 'custom':
                    filterData = {
                        type: 'custom',
                        startDate: document.getElementById('startDate').value,
                        endDate: document.getElementById('endDate').value
                    };
                    break;
            }

            // Send filter data to server
            fetch('/admin/salesReport', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify(filterData)
            })
                .then(response => response.json())
                .then(data => {

                    updateReports(data);
                })
                .catch(error => {
                    console.error('Error:', error);
                    alert('Failed to fetch filtered data');
                });
        }

        function updateReports(data) {

            document.querySelector('.revenue-value').textContent = 'â‚¹' + data.totalRevenue.toFixed(2);
            document.querySelector('.orders-value').textContent = data.totalOrders;
            document.querySelector('.products-value').textContent = data.totalProducts;
            document.querySelector('.customers-value').textContent = data.totalCustomers;


            revenueChart.data = data.revenueChartData;
            revenueChart.update();

            productsChart.data = data.productsChartData;
            productsChart.update();


            updateTableContent(data.orders);
        }


        document.addEventListener('DOMContentLoaded', function () {
            toggleDateFilters();


            const today = new Date();
            document.getElementById('selectedYear').value = today.getFullYear();
            document.getElementById('selectedMonth').value = today.getMonth() + 1;
            document.getElementById('endDate').value = today.toISOString().split('T')[0];

            const lastMonth = new Date(today.setMonth(today.getMonth() - 1));
            document.getElementById('startDate').value = lastMonth.toISOString().split('T')[0];
        });

        // Initialize tooltips
        const tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]'));
        const tooltipList = tooltipTriggerList.map(function (tooltipTriggerEl) {
            return new bootstrap.Tooltip(tooltipTriggerEl);
        });
    </script>
</body>

</html>