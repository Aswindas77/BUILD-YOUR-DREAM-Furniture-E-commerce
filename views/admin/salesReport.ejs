<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Admin Dashboard</title>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/html2pdf.js/0.10.1/html2pdf.bundle.min.js"></script>
    <link rel="stylesheet" href="/public/adminAssets/css/adminDashboard.css">
   
</head>

<body>
    

    <!-- Summary Cards -->
    <!-- <div class="summary-cards">
        <div class="card users-card">
            <div class="card-title">Total Users</div>
            <div class="card-value">
                <%= totalUsers %>
            </div>
        </div>
        <div class="card orders-card">
            <div class="card-title">Total Orders</div>
            <div class="card-value">
                <%= totalOrders %>
            </div>
        </div>
        <div class="card products-card">
            <div class="card-title">Total Products</div>
            <div class="card-value">
                <%= totalProducts %>
            </div>
        </div>
        <div class="card delivered-card">
            <div class="card-title">Delivered Products</div>
            <div class="card-value">
                <%= totalDeliveredProducts %>
            </div>
        </div>
        <div class="card revenue-card">
            <div class="card-title">Total Revenue</div> 
            <div class="card-value">₹<%=Number(totalRevenue).toFixed(2) %>
            </div>
        </div>
        <div class="card returns-card">
            <div class="card-title">Total Returns</div>
            <div class="card-value">
                <%= totalReturns %> 
            </div>
        </div>
    </div> -->

    <!-- Orders Table Section -->
    <div class="sales-section">
        <div class="sales-header">
            <h2 class="sales-title">Sales report</h2>
            <div class="period-buttons">
                <button class="period-button active">Daily</button>
                <button class="period-button">Weekly</button>
                <button class="period-button">Monthly</button>
                <button class="period-button">Yearly</button>
                <button class="period-button">Custom</button>
            </div>
            <div class="export-buttons">
                <!-- <button class="export-button excel-button">
                    Export to Excel
                </button> -->
                <button class="export-button pdf-button">
                    Export to PDF
                </button>
            </div>
        </div>

        <table class="sales-table">
            <thead>
                <tr>
                    <th>Order ID</th>
                    <th>User ID</th>
                    <th>Items</th>
                    <th>Total Amount</th>
                    <th>Payment Status</th>
                    <th>Payment Method</th>
                    <th>Order Status</th>
                    <th>Order Date</th>
                </tr>
            </thead>
            <tbody>
                <!-- Dummy data for now -->
                <tr>
                    <td>#ORD001</td>
                    <td>USR123</td>
                    <td>3 items</td>
                    <td>₹110,557</td>
                    <td>Pending</td>
                    <td>Cash on Delivery</td>
                    <td>Delivered</td>
                    <td>03 Mar, 2024</td>
                </tr>
                <tr>
                    <td>#ORD002</td>
                    <td>USR456</td>
                    <td>2 items</td>
                    <td>₹85,999</td>
                    <td>Paid</td>
                    <td>UPI</td>
                    <td>Processing</td>
                    <td>02 Mar, 2024</td>
                </tr>
                <!-- Add more dummy rows as needed -->
            </tbody>
        </table>
    </div>

    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const periodButtons = document.querySelectorAll('.period-button');
            const tableBody = document.querySelector('.sales-table tbody');

            // Function to format date
            function formatDate(dateString) {
                const date = new Date(dateString);
                return date.toLocaleDateString('en-IN', {
                    day: '2-digit',
                    month: 'short',
                    year: 'numeric'
                });
            }

            // Function to format currency
            function formatCurrency(amount) {
                return '₹' + Number(amount).toLocaleString('en-IN');
            }

            // Function to update table with new data
            function updateTable(orders) {
                console.log(orders)
                tableBody.innerHTML = orders.map(order => `
                    <tr>
                        <td>#${order._id}</td>
                        <td>${order.userId}</td>
                        <td>${order.items.length} items</td>
                        <td>${formatCurrency(order.totalAmount)}</td>
                        <td>${order.paymentStatus}</td>
                        <td>${order.paymentMethod}</td>
                        <td>${order.status}</td>
                        <td>${formatDate(order.createdAt)}</td>
                    </tr>
                `).join('');
            }

            // Add click event to all period buttons
            periodButtons.forEach(button => {
                button.addEventListener('click', async function () {
                    // Remove active class from all buttons
                    periodButtons.forEach(btn => btn.classList.remove('active'));
                    // Add active class to clicked button
                    this.classList.add('active');

                    const period = this.textContent.toLowerCase();

                    try {
                        const response = await fetch(`/admin/orders/${period}`);
                        if (!response.ok) {
                            throw new Error('Network response was not ok');
                        }
                        const data = await response.json();
                        updateTable(data);
                    } catch (error) {
                        console.error('Error fetching orders:', error);
                        
                    }
                });
            });

            // Trigger click on Daily button to load initial data
            document.querySelector('.period-button').click();

            // Add PDF export functionality
            const pdfButton = document.querySelector('.pdf-button');

            function generatePDF() {
                // Create PDF content container
                const pdfContent = document.createElement('div');
                pdfContent.classList.add('pdf-wrapper');

                // Add header with logo and company info
                const header = document.createElement('div');
                header.classList.add('pdf-header');



                // Add report title and date
                const titleSection = document.createElement('div');
                titleSection.classList.add('pdf-title-section');
                const activePeriod = document.querySelector('.period-button.active').textContent;
                const currentDate = new Date().toLocaleDateString('en-IN', {
                    day: '2-digit',
                    month: 'long',
                    year: 'numeric'
                });
                titleSection.innerHTML = `
                    <h2>Sales Report</h2>
                    <div class="report-meta">
                        <p><strong>Period:</strong> ${activePeriod}</p>
                        <p><strong>Generated on:</strong> ${currentDate}</p>
                    </div>
                `;
                pdfContent.appendChild(titleSection);

                // Add summary section
                const summarySection = document.createElement('div');
                summarySection.classList.add('pdf-summary');
                summarySection.innerHTML = `
                    <div class="summary-grid">
                        <div class="summary-item">
                            <h3>Total Orders</h3>
                            <p>${document.querySelector('.orders-card .card-value').textContent}</p>
                        </div>
                        <div class="summary-item">
                            <h3>Total Revenue</h3>
                            <p>${document.querySelector('.revenue-card .card-value').textContent}</p>
                        </div>
                        <div class="summary-item">
                            <h3>Total Products</h3>
                            <p>${document.querySelector('.products-card .card-value').textContent}</p>
                        </div>
                    </div>
                `;
                pdfContent.appendChild(summarySection);

                // Add main table
                const tableSection = document.createElement('div');
                tableSection.classList.add('pdf-table-section');
                const tableClone = document.querySelector('.sales-table').cloneNode(true);
                tableClone.classList.add('pdf-table');
                tableSection.appendChild(tableClone);
                pdfContent.appendChild(tableSection);

                // Add footer
                const footer = document.createElement('div');
                footer.classList.add('pdf-footer');

                pdfContent.appendChild(footer);

                // Add CSS styles specific to PDF
                const style = document.createElement('style');
                style.textContent = `
                    .pdf-wrapper {
                        padding: 20px;
                        background: white;
                        font-family: Arial, sans-serif;
                    }
                    .pdf-header {
                        text-align: center;
                        margin-bottom: 20px;
                        padding-bottom: 20px;
                        border-bottom: 2px solid #333;
                    }
                    .company-info h1 {
                        color: #333;
                        margin-bottom: 10px;
                    }
                    .pdf-title-section {
                        text-align: center;
                        margin-bottom: 30px;
                    }
                    .report-meta {
                        margin-top: 10px;
                        font-size: 14px;
                    }
                    .pdf-summary {
                        margin-bottom: 30px;
                    }
                    .summary-grid {
                        display: grid;
                        grid-template-columns: repeat(3, 1fr);
                        gap: 20px;
                        margin-bottom: 20px;
                    }
                    .summary-item {
                        text-align: center;
                        padding: 15px;
                        background: #f8f9fa;
                        border-radius: 8px;
                    }
                    .pdf-table {
                        width: 100%;
                        border-collapse: collapse;
                        margin-bottom: 30px;
                    }
                    .pdf-table th, .pdf-table td {
                        border: 1px solid #ddd;
                        padding: 12px;
                        text-align: left;
                    }
                    .pdf-table th {
                        background-color: #f4f4f4;
                        font-weight: bold;
                    }
                    .pdf-footer {
                        text-align: center;
                        margin-top: 30px;
                        padding-top: 20px;
                        border-top: 1px solid #ddd;
                        font-size: 12px;
                        color: #666;
                    }
                `;
                pdfContent.appendChild(style);

                // PDF export options
                const opt = {
                    margin: [0.5, 0.5],
                    filename: `Build your dream-sales-report-${activePeriod.toLowerCase()}-${new Date().toISOString().split('T')[0]}.pdf`,
                    image: { type: 'jpeg', quality: 0.98 },
                    html2canvas: { scale: 2 },
                    jsPDF: { unit: 'in', format: 'a4', orientation: 'landscape' }
                };

                // Generate PDF
                html2pdf().set(opt).from(pdfContent).save();
            }

            // Add click event to PDF button
            pdfButton.addEventListener('click', generatePDF);
        });
    </script>
</body>

</html>