<div class="return-orders-container">
    <div class="dashboard-header">
        <div class="header-title">
            <h2><i class="fas fa-undo-alt"></i> Return Orders</h2>
            <span class="total-returns">Total Returns: <%= returnOrders.length %></span>
        </div>
        <div class="header-actions">

           
        </div>
    </div>

    <div class="return-orders-list">
        <% if (!returnOrders || returnOrders.length === 0) { %>
            <h1 style="margin: 25%; color: red;">no Return orders</h1>
        <% } else { %>
            <% returnOrders.forEach(order => { %>
                <div class="return-order-card">
                    <div class="order-header">
                        <div class="order-date">
                            <i class="far fa-calendar-alt"></i>
                            <span>
                                <%= new Date(order.returnDate).toLocaleDateString('en-US', { year: 'numeric' , month: 'short' , day: 'numeric' }) %>
                            </span>
                            <small>
                                <%= new Date(order.returnDate).toLocaleTimeString() %>
                            </small>
                        </div>
                        <div class="order-status <%= order.returnStatus.toLowerCase() %>">
                            <%= order.returnStatus %>
                        </div>
                    </div>
    
                    <div class="order-details">
                        <div class="user-details">
                            <div class="detail-label">Customer</div>
                            <div class="user-info">
                                <div class="user-avatar">
                                    <%= order.userId.username.charAt(0).toUpperCase() %>
                                </div>
                                <div class="user-text">
                                    <div class="username">
                                        <%= order.userId.username %>
                                    </div>
                                    <div class="user-contact">
                                        <%= order.userId.email %>
                                    </div>
                                </div>
                            </div>
                        </div>
    
                        <div class="product-details">
                            <div class="detail-label">Product</div>
                            <div class="product-info">
                                <div class="product-text">
                                    <div class="product-name">
                                        <%= order.orderId?.items?.[0]?.productId?.name || 'Product Name Not Available' %>
                                    </div>
                                    <div class="product-price">â‚¹<%= order.orderId?.items?.[0]?.price || '0' %>
                                    </div>
                                </div>
                            </div>
                        </div>
    
                        <div class="return-details">
                            <div class="detail-label">Return Details</div>
                            <div class="return-reason">
                                <span class="reason-tag">
                                    <%= order.reason %>
                                </span>
                            </div>
                        </div>
    
                        <div class="payment-details">
                            <div class="detail-label">Payment Method</div>
                            <div class="payment-info">
                                <i class="fas <%= order.orderId?.paymentMethod === 'Cash on Delivery' ? 'fa-money-bill-alt' : 'fa-credit-card' %>"></i>
                                <span>
                                    <%= order.orderId?.paymentMethod || 'Not Available' %>
                                </span>
                            </div>
                        </div>
                    </div>
    
                    <div class="order-actions">
                        <% if (order.returnStatus === 'Pending') { %>
                            <button class="btn-approve" onclick="updateReturnStatus('<%= order._id %>', 'Approved')">
                                <i class="fas fa-check"></i> Approve Return
                            </button>
                            <button class="btn-reject" onclick="updateReturnStatus('<%= order._id %>', 'Rejected')">
                                <i class="fas fa-times"></i> Reject Return
                            </button>
                        <% } %>
                    </div>
                </div>
            <% }); %>
        <% } %>
    </div>
    
</div>

<style>
    .return-orders-container {
        padding: 2rem;
        background: #f8f9fa;
    }

    .dashboard-header {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 2rem;
    }

    .header-title {
        display: flex;
        align-items: center;
        gap: 1rem;
    }

    .header-title h2 {
        color: #2c3e50;
        display: flex;
        align-items: center;
        gap: 0.5rem;
    }

    .total-returns {
        background: #e1f5fe;
        color: #0288d1;
        padding: 0.3rem 0.8rem;
        border-radius: 20px;
        font-size: 0.9rem;
    }

    .header-actions {
        display: flex;
        gap: 1rem;
    }

    .return-order-card {
        background: white;
        border-radius: 10px;
        box-shadow: 0 2px 8px rgba(0, 0, 0, 0.05);
        margin-bottom: 1rem;
        overflow: hidden;
    }

    .order-header {
        display: flex;
        justify-content: space-between;
        align-items: center;
        padding: 1rem;
        background: #f8f9fa;
        border-bottom: 1px solid #eee;
    }

    .order-date {
        display: flex;
        align-items: center;
        gap: 0.5rem;
        color: #666;
    }

    .order-status {
        padding: 0.4rem 1rem;
        border-radius: 20px;
        font-size: 0.9rem;
        font-weight: 500;
    }

    .order-status.pending {
        background: #fff3cd;
        color: #856404;
    }

    .order-status.approved {
        background: #d4edda;
        color: #155724;
    }

    .order-status.rejected {
        background: #f8d7da;
        color: #721c24;
    }

    .order-details {
        padding: 1.5rem;
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
        gap: 1.5rem;
    }

    .detail-label {
        font-weight: 600;
        color: #2c3e50;
        margin-bottom: 0.8rem;
    }

    .user-info,
    .product-info {
        display: flex;
        align-items: center;
        gap: 1rem;
    }

    .user-avatar {
        width: 40px;
        height: 40px;
        background: #4a90e2;
        color: white;
        border-radius: 50%;
        display: flex;
        align-items: center;
        justify-content: center;
        font-weight: 600;
    }

    .product-image {
        width: 50px;
        height: 50px;
        object-fit: cover;
        border-radius: 6px;
    }

    .reason-tag {
        display: inline-block;
        background: #e1f5fe;
        color: #0288d1;
        padding: 0.3rem 0.8rem;
        border-radius: 4px;
        font-size: 0.9rem;
        margin-bottom: 0.5rem;
    }

    .reason-description {
        color: #666;
        font-size: 0.9rem;
        margin: 0;
    }

    .payment-info {
        display: flex;
        align-items: center;
        gap: 0.5rem;
        color: #2c3e50;
    }

    .order-actions {
        padding: 1rem;
        border-top: 1px solid #eee;
        display: flex;
        justify-content: flex-end;
        gap: 0.8rem;
    }

    .btn-approve,
    .btn-reject,
    .btn-view {
        padding: 0.5rem 1rem;
        border: none;
        border-radius: 6px;
        cursor: pointer;
        display: flex;
        align-items: center;
        gap: 0.5rem;
        font-weight: 500;
        transition: all 0.3s ease;
    }

    .btn-approve {
        background: #d4edda;
        color: #155724;
    }

    .btn-reject {
        background: #f8d7da;
        color: #721c24;
    }

    .btn-view {
        background: #e2e6ea;
        color: #383d41;
    }

    .btn-approve:hover {
        background: #c3e6cb;
    }

    .btn-reject:hover {
        background: #f5c6cb;
    }

    .btn-view:hover {
        background: #d6d8db;
    }

    @media (max-width: 768px) {
        .dashboard-header {
            flex-direction: column;
            gap: 1rem;
        }

        .header-actions {
            width: 100%;
        }

        .order-details {
            grid-template-columns: 1fr;
        }
    }
</style>

<script>
    function updateReturnStatus(returnId, status) {
        Swal.fire({
            title: "Are you sure?",
            text: `Do you want to ${status.toLowerCase()} this return request?`,
            icon: "warning",
            showCancelButton: true,
            confirmButtonColor: "#3085d6",
            cancelButtonColor: "#d33",
            confirmButtonText: "Yes, proceed!",
            cancelButtonText: "Cancel"
        }).then((result) => {
            if (result.isConfirmed) {
                fetch(`/admin/updateReturnStatus/${returnId}`, {
                    method: 'PUT',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({ status })
                })
                    .then(response => response.json())
                    .then(data => {
                        if (data.success) {
                            Swal.fire({
                                title: "Success!",
                                text: "Return request updated successfully.",
                                icon: "success",
                                confirmButtonColor: "#3085d6"
                            }).then(() => {
                                window.location.reload();
                            });
                        } else {
                            Swal.fire({
                                title: "Error!",
                                text: "Failed to update status: " + (data.message || "Unknown error"),
                                icon: "error",
                                confirmButtonColor: "#d33"
                            });
                        }
                    })
                    .catch(error => {
                        Swal.fire({
                            title: "Error!",
                            text: "An unexpected error occurred.",
                            icon: "error",
                            confirmButtonColor: "#d33"
                        });
                        console.error("Fetch error:", error);
                    });
            }
        });
    }

    function viewReturnDetails(returnId) {
        window.location.href = `/admin/returnOrders/${returnId}`;
    }

    document.getElementById('searchInput').addEventListener('input', function (e) {
        const searchTerm = e.target.value.toLowerCase();
        const cards = document.querySelectorAll('.return-order-card');

        cards.forEach(card => {
            const text = card.textContent.toLowerCase();
            card.style.display = text.includes(searchTerm) ? '' : 'none';
        });
    });

    document.getElementById('statusFilter').addEventListener('change', function (e) {
        const status = e.target.value;
        const cards = document.querySelectorAll('.return-order-card');

        cards.forEach(card => {
            if (status === 'all') {
                card.style.display = '';
            } else {
                const statusElement = card.querySelector('.order-status');
                card.style.display = statusElement.textContent.toLowerCase().trim() === status ? '' : 'none';
            }
        });
    });
</script>