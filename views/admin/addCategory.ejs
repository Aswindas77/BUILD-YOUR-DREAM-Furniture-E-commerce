<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Add Category</title>
    <!-- Add SweetAlert2 CSS and JS -->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/sweetalert2/11.10.5/sweetalert2.all.min.js"></script>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/sweetalert2/11.10.5/sweetalert2.min.css">
    <link rel="stylesheet" href="/public/adminAssets/css/addCat.css">
</head>

<body>
    <div class="container">
        <h1>Add Category</h1>
        <form method="post" action="" onsubmit="return handleSubmit(event)" id="add-category-form">
            <div class="form-group">
                <input type="text" id="category-name" name="name" placeholder=" ">
                <label for="category-name">Category Name</label>
            </div>
            <div class="form-group">
                <textarea id="category-description" name="description" placeholder=" "></textarea>
                <label for="category-description">Category Description</label>
            </div>
            <div class="mt-3">

                <input type="number" class="form-control" id="catOffer" name="productOffer"
                    placeholder="Enter category offer" step="1" >
            </div>
            <div class="mt-3">

                <input type="number" class="form-control" id="minPrice" name="productOffer"
                    placeholder="minimum purchase price" step="1" >
            </div>
            <div class="mt-3">

                <input type="number" class="form-control" id="claimableAmount" name="productOffer"
                    placeholder="maximum claimable amount" step="1" >
            </div>
            <div class="mt-3">
                <button type="submit" id="btn-submit" class="btn">Add Category</button>
            </div>
        </form>
        <div class="note">* Category name should only contain alphabets and spaces.</div>
    </div>


    <script>
        async function handleSubmit(event) {
            event.preventDefault();

            const categoryName = document.getElementById('category-name').value;
            const categoryDescription = document.getElementById('category-description').value;
            const categoryOffer = document.getElementById('catOffer').value;
            const minimumPrice = document.getElementById('minPrice').value;
            const claimableAmount = document.getElementById('claimableAmount').value;

            
            const nameRegex = /^[A-Za-z ]+$/;
            const numberRegex = /^(0|[1-9]\d*)(\.\d+)?$/;
            const minPriceValue = parseFloat(minimumPrice);
            const claimableValue = parseFloat(claimableAmount);

            if (!nameRegex.test(categoryName)) {
                await Swal.fire({
                    icon: 'error',
                    title: 'enter Category required all fields',
                    text: 'please enter category name and description',
                    confirmButtonColor: '#007bff'
                });
                return false;
            }

            if (!categoryOffer || !numberRegex.test(categoryOffer) || parseFloat(categoryOffer) > 99 ||parseFloat(categoryOffer) < 0 ) {
                await Swal.fire({
                    icon: 'error',
                    title: 'Invalid Offer',
                    text: 'Category offer must be a valid number between 0 and 99.',
                    confirmButtonColor: '#007bff'
                });
                return false;
            }

            

            if (!minimumPrice || isNaN(minimumPrice) || minimumPrice < 0) {
                await Swal.fire({
                    icon: 'error',
                    title: 'Invalid Minimum Price',
                    text: 'Minimum purchase price must be a non-negative number.',
                    confirmButtonColor: '#007bff'
                });
                return false;
            }

            if (!claimableAmount || isNaN(claimableAmount) || claimableAmount < 0) {
                await Swal.fire({
                    icon: 'error',
                    title: 'Invalid Claimable Amount',
                    text: 'Maximum claimable amount must be a non-negative number.',
                    confirmButtonColor: '#007bff'
                });
                return false;
            }

            if (parseFloat(minimumPrice) < parseFloat(claimableAmount)) {
                await Swal.fire({
                    icon: 'error',
                    title: 'Invalid Price Range',
                    text: 'Minimum price cannot be greater than the maximum claimable amount.',
                    confirmButtonColor: '#007bff'
                });
                return false;
            }




            try {
                const response = await fetch('/admin/addcategory', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({
                        name: categoryName,
                        description: categoryDescription,
                        categoryOffer: categoryOffer,
                        minimumPrice: minimumPrice,
                        claimableAmount: claimableAmount,

                    }),
                });
                const result = await response.json();

                if (response.status === 400) {
                    await Swal.fire({
                        icon: 'error',
                        title: 'Error',
                        text: result.message,
                        confirmButtonColor: '#007bff'
                    });
                } else if (response.status === 200) {
                    await Swal.fire({
                        icon: 'success',
                        title: 'Success',
                        text: result.message,
                        confirmButtonColor: '#007bff'
                    }).then(() => {
                        window.location.href = '/admin/categoryManagement';
                    });
                }
            } catch (error) {
                console.error(error);
                await Swal.fire({
                    icon: 'error',
                    title: 'Oops...',
                    text: 'Something went wrong. Please try again.',
                    confirmButtonColor: '#007bff'
                });
            }
        }

        document.getElementById('add-category-form').addEventListener('submit');
    </script>
</body>

</html>