<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Add Category</title>
    <!-- Add SweetAlert2 CSS and JS -->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/sweetalert2/11.10.5/sweetalert2.all.min.js"></script>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/sweetalert2/11.10.5/sweetalert2.min.css">
    <link rel="stylesheet" href="/public/adminAssets/css/addCat.css">
    <style>
        .error-message {
            color: #dc3545;
            font-size: 0.875rem;
            margin-top: 0.25rem;
            display: none;
        }

        .form-group {
            margin-bottom: 1rem;
        }

        .error .error-message {
            display: block;
        }

        .error input,
        .error textarea {
            border-color: #dc3545;
        }
    </style>
</head>

<body>
    <div class="container">
        <h1>Add Category</h1>
        <form method="post" action="" onsubmit="return handleSubmit(event)" id="add-category-form">
            <div class="form-group">
                <input type="text" id="category-name" name="name" placeholder=" ">
                <label for="category-name">Category Name</label>
                <span class="error-message" id="category-name-error"></span>
            </div>
            <div class="form-group">
                <textarea id="category-description" name="description" placeholder=" "></textarea>
                <label for="category-description">Category Description</label>
                <span class="error-message" id="category-description-error"></span>
            </div>
            <div class="form-group">
                <input type="number" class="form-control" id="catOffer" name="productOffer"
                    placeholder="Enter category offer" step="1">
                <span class="error-message" id="catOffer-error"></span>
            </div>
            <div class="form-group">
                <input type="number" class="form-control" id="minPrice" name="productOffer"
                    placeholder="minimum purchase price" step="1">
                <span class="error-message" id="minPrice-error"></span>
            </div>
            <div class="form-group">
                <input type="number" class="form-control" id="claimableAmount" name="productOffer"
                    placeholder="maximum claimable amount" step="1">
                <span class="error-message" id="claimableAmount-error"></span>
            </div>
            <div class="mt-3">
                <button type="submit" id="btn-submit" class="btn">Add Category</button>
            </div>
        </form>
        <div class="note">* Category name should only contain alphabets and spaces.</div>
    </div>


    <script>
        
        function showError(inputId, message) {
            const input = document.getElementById(inputId);
            const errorElement = document.getElementById(inputId + '-error');
            input.parentElement.classList.add('error');
            errorElement.textContent = message;
        }

        
        function clearError(inputId) {
            const input = document.getElementById(inputId);
            const errorElement = document.getElementById(inputId + '-error');
            input.parentElement.classList.remove('error');
            errorElement.textContent = '';
        }

        
        function validateField(inputId, value, rules) {
            clearError(inputId);

            if (!value.trim()) {
                showError(inputId, `This field is required`);
                return false;
            }

            switch (inputId) {
                case 'category-name':
                    if (!/^[A-Za-z ]+$/.test(value)) {
                        showError(inputId, 'Category name should only contain alphabets and spaces');
                        return false;
                    }
                    break;

                case 'category-description':
                    if (value.length < 10) {
                        showError(inputId, 'Description should be at least 10 characters');
                        return false;
                    }
                    if (value.length > 200) {
                        showError(inputId, 'Description should not exceed 200 characters');
                        return false;
                    }
                    break;

                case 'catOffer':
                    const offerValue = parseFloat(value);
                    if (isNaN(offerValue) || offerValue < 0 || offerValue > 99) {
                        showError(inputId, 'Offer must be between 0 and 99');
                        return false;
                    }
                    break;

                case 'minPrice':
                    if (isNaN(value) || parseFloat(value) < 0) {
                        showError(inputId, 'Minimum price must be a positive number');
                        return false;
                    }
                    break;

                case 'claimableAmount':
                    if (isNaN(value) || parseFloat(value) < 0) {
                        showError(inputId, 'Claimable amount must be a positive number');
                        return false;
                    }
                    break;
            }

            return true;
        }

       
        document.getElementById('category-name').addEventListener('input', function () {
            validateField('category-name', this.value);
        });

        document.getElementById('category-description').addEventListener('input', function () {
            validateField('category-description', this.value);
        });

        document.getElementById('catOffer').addEventListener('input', function () {
            validateField('catOffer', this.value);
        });

        document.getElementById('minPrice').addEventListener('input', function () {
            validateField('minPrice', this.value);
        });

        document.getElementById('claimableAmount').addEventListener('input', function () {
            validateField('claimableAmount', this.value);
        });

        async function handleSubmit(event) {
            event.preventDefault();

            const categoryName = document.getElementById('category-name').value.trim();
            const categoryDescription = document.getElementById('category-description').value.trim();
            const categoryOffer = document.getElementById('catOffer').value.trim();
            const minimumPrice = document.getElementById('minPrice').value.trim();
            const claimableAmount = document.getElementById('claimableAmount').value.trim();

            
            const isNameValid = validateField('category-name', categoryName);
            const isDescriptionValid = validateField('category-description', categoryDescription);
            const isOfferValid = validateField('catOffer', categoryOffer);
            const isMinPriceValid = validateField('minPrice', minimumPrice);
            const isClaimableValid = validateField('claimableAmount', claimableAmount);

            
            if (parseFloat(minimumPrice) < parseFloat(claimableAmount)) {
                showError('minPrice', 'Minimum price cannot be less than the maximum claimable amount');
                return false;
            }

            
            if (!isNameValid || !isDescriptionValid || !isOfferValid || !isMinPriceValid || !isClaimableValid) {
                return false;
            }

            try {
                const response = await fetch('/admin/addcategory', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({
                        name: categoryName,
                        description: categoryDescription,
                        categoryOffer: categoryOffer,
                        minimumPrice: minimumPrice,
                        claimableAmount: claimableAmount,
                    }),
                });
                const result = await response.json();

                if (response.status === 400) {
                    await Swal.fire({
                        icon: 'error',
                        title: 'Error',
                        text: result.message,
                        confirmButtonColor: '#007bff'
                    });
                } else if (response.status === 200) {
                    await Swal.fire({
                        icon: 'success',
                        title: 'Success',
                        text: result.message,
                        confirmButtonColor: '#007bff'
                    }).then(() => {
                        window.location.href = '/admin/categoryManagement';
                    });
                }
            } catch (error) {
                console.error(error);
                await Swal.fire({
                    icon: 'error',
                    title: 'Oops...',
                    text: 'Something went wrong. Please try again.',
                    confirmButtonColor: '#007bff'
                });
            }
        }

        document.getElementById('add-category-form').addEventListener('submit', handleSubmit);
    </script>
</body>

</html>
</script>
</body>

</html>