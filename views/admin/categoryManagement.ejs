<!DOCTYPE html>
<html lang="en"> 
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Category Management</title>
    <!-- Add SweetAlert2 -->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/sweetalert2/11.10.5/sweetalert2.all.min.js"></script>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/sweetalert2/11.10.5/sweetalert2.min.css">
    <link rel="stylesheet" href="/public/adminAssets/css/catManagement.css">
    <style>
      .table-responsive {
          overflow-x: auto;
          margin: 20px 0;
      }
  
      .category-table {
          border-collapse: collapse;
          background: #fff;
          box-shadow: 0 2px 5px rgba(0,0,0,0.1);
          width: 100%;
      }
  
      .category-table th,
      .category-table td {
          padding: 12px 15px;
          text-align: left;
          border-bottom: 1px solid #ddd;
          vertical-align: middle;
      }
  
      .category-table th {
          background-color: #f5f5f5;
          font-weight: 600;
      }
  
      .category-table tr:hover {
          background-color: #f9f9f9;
      }
  
      .col-index { width: 5%; }
      .col-name { width: 25%; }
      .col-desc { width: 40%; }
      .col-actions { width: 30%; }
  
      .action-buttons {
          display: flex;
          gap: 8px; 
          align-items: center;
          flex-wrap: nowrap; 
      }
  
      .btn {
          padding: 8px 16px; 
          border: none;
          border-radius: 4px;
          cursor: pointer;
          transition: background-color 0.3s ease;
          font-size: 14px;
          min-width: 80px; 
          text-align: center;
      }
  
      .btn-edit {
          background-color: #007bff;
          color: white;
      }
  
      .btn-edit:hover {
          background-color: #0056b3;
      }
  
      .btn-delete {
          background-color: #dc3545;
          color: white;
      }
  
      .btn-delete:hover {
          background-color: #b02a37;
      }
  
      .btn-status {
          background-color: #28a745;
          color: white;
      }
  
      .btn-danger {
          background-color: #dc3545;
      }
  
      .btn-success {
          background-color: #28a745;
      }
  
      .btn-status:hover {
          filter: brightness(85%);
      }
  
      .inline-form {
          display: inline-block;
          margin: 0;
      }
  
      .spinner-border {
          width: 1rem;
          height: 1rem;
          vertical-align: middle;
      }
  
      @media (max-width: 768px) {
          .action-buttons {
              flex-direction: column;
              gap: 6px;
              align-items: flex-start;
          }
  
          .btn {
              width: 100%; 
              min-width: unset; 
              padding: 6px 12px;
          }
  
          .category-table th,
          .category-table td {
              padding: 8px;
          }
      }
  </style>
</head>
<body>
    <h1 style="margin-left: 40%">Category Management</h1>

  <div class="container">
    <div class="add-category">
      <a href="/admin/addcategory" style="text-decoration: none;">
        <button type="submit" class="btn-link" style="text-decoration: none;">
          Add new Category
        </button>
      </a>
    </div>

    <div class="categories-table">
      <h2 style="margin-top: 20px;">Existing Categories</h2>
      <div class="table-responsive">
          <table class="category-table" width="100%">
              <thead>
                  <tr>
                      <th class="col-index">#</th>
                      <th class="col-name">Category Name</th>
                      <th class="col-desc">Description</th>
                      <th class="col-actions">Actions</th>
                  </tr>
              </thead>
              <tbody>
                  <% categories.forEach((category, index) => { %>
                      <tr>
                          <td><%= (currentPage - 1) * 4 + index + 1 %></td>
                          <td><%= category.name %></td>
                          <td><%= category.description %></td>
                          <td class="action-buttons">
                              <form method="post" action="editcategory" class="inline-form">
                                  <input hidden type="text" name="id" value="<%= category._id %>">
                                  <button type="submit" class="btn btn-edit">Edit</button>
                              </form>
                              <button type="button" class="btn btn-delete" 
                                      onclick="deleteCategory('<%= category._id %>')">
                                  Delete
                              </button>
                              <button class="btn btn-status <%= category.isListed ? 'btn-danger' : 'btn-success' %> access-btn" 
                                      data-id="<%= category._id %>"
                                      data-status="<%= category.isListed ? 'unlisted' : 'active' %>">
                                  <span class="button-text">
                                      <%= category.isListed ? 'Listed' : 'Unlisted' %>
                                  </span>
                                  <span class="spinner-border spinner-border-sm d-none" role="status">
                                      <span class="visually-hidden">Loading...</span>
                                  </span>
                              </button>
                          </td>
                      </tr>
                  <% }) %>
              </tbody>
          </table>
      </div>
  </div>

    <!-- Pagination Links -->
    <div class="pagination" style="margin-top: 20px; text-align: center;">
      <% if (currentPage > 1) { %>
        <a href="?page=<%= currentPage - 1 %>&search=<%= searchQuery %>" style="text-decoration: none; padding: 5px 10px; border: 1px solid #ccc; margin-right: 5px;">Previous</a>
      <% } %>

      <% for (let i = 1; i <= totalPages; i++) { %>
        <a href="?page=<%= i %>&search=<%= searchQuery %>" style="text-decoration: none; padding: 5px 10px; border: 1px solid #ccc; background-color: '<%= currentPage === i ? '#ddd' : '#fff' %>';">
          <%= i %>
        </a>
      <% } %>

      <% if (currentPage < totalPages) { %>
        <a href="?page=<%= currentPage + 1 %>&search=<%= searchQuery %>" style="text-decoration: none; padding: 5px 10px; border: 1px solid #ccc; margin-left: 5px;">Next</a>
      <% } %>
    </div>
  </div>

    <script>

      
      
     document.addEventListener('DOMContentLoaded', function () {
            const accessButtons = document.querySelectorAll('.access-btn');
    
            accessButtons.forEach(button => {
                button.addEventListener('click', async function () {
                    try {
                        const userId = this.dataset.id;
                        const currentStatus = this.dataset.status;
                        const action = currentStatus === 'active' ? 'block' : 'unblock';
                        const buttonText = this.querySelector('.button-text');
                        const spinner = this.querySelector('.spinner-border');
    
                        
                        this.disabled = true;
                        buttonText.classList.add('d-none');
                        spinner.classList.remove('d-none');
    
                       
                        const response = await fetch(`admin/list/${userId}/${action}`, {
                            method: 'PATCH',
                            headers: {
                                'Content-Type': 'application/json',
                                'Accept': 'application/json'
                            }
                        });
    
                        
                        const contentType = response.headers.get('Content-Type');
                        if (!contentType.includes('application/json')) {
                            throw new Error('Unexpected response from the server. Please try again.');
                        }
    
                        
                        const data = await response.json();
    
                        if (response.ok) {
                            
                            const newStatus = currentStatus === 'active' ? 'unlisted' : 'active';
                            this.dataset.status = newStatus;
    
                            
                            if (newStatus === 'unlisted') {
                                this.classList.remove('btn-success');
                                this.classList.add('btn-danger');
                                buttonText.textContent = 'Unblock';
                            } else {
                                this.classList.remove('btn-danger');
                                this.classList.add('btn-success');
                                buttonText.textContent = 'Block';
                            }
    
                            
                            Swal.fire({
                                title: 'Success!',
                                text: data.message,
                                icon: 'success',
                                confirmButtonText: 'OK'
                            }).then(() => {
                                window.location.reload();
                            });
                        } else {
                            throw new Error(data.message);
                        }
                    } catch (error) {
                        console.error('Error:', error);
    
                        
                        Swal.fire({
                            title: 'Error!',
                            text: error.message || 'Failed to update Category status.',
                            icon: 'error',
                            confirmButtonText: 'OK'
                        });
                    } finally {
                        
                        this.disabled = false;
                        buttonText.classList.remove('d-none');
                        spinner.classList.add('d-none');
                    }
                });
            });
        });
      

      
        async function deleteCategory(categoryId) {
            
            const result = await Swal.fire({
                title: 'Are you sure?',
                text: "You won't be able to revert this!",
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#dc3545',
                cancelButtonColor: '#6c757d',
                confirmButtonText: 'Yes, delete it!',
                cancelButtonText: 'Cancel',
                reverseButtons: true
            });

            if (result.isConfirmed) {
                try {
                    const response = await fetch(`/admin/deletecategory/${categoryId}`, {
                        method: 'PATCH',
                        headers: {
                            'Content-Type': 'application/json'
                        }
                    });

                    if (!response.ok) {
                        throw new Error("Network response was not ok!");
                    }

                    const data = await response.json();

                    if (data.success) {
                        
                        await Swal.fire({ 
                            icon: 'success',
                            title: 'Deleted!',
                            text: 'Category has been deleted successfully.',
                            confirmButtonColor: '#28a745'
                        });
                        window.location.href = '/admin/categoryManagement';
                    } else {
                        
                        await Swal.fire({
                            icon: 'error',
                            title: 'Oops...',
                            text: data.message || 'Something went wrong!',
                            confirmButtonColor: '#007bff'
                        });
                    }
                } catch (error) {
                    console.error('Error:', error);
                    
                    await Swal.fire({
                        icon: 'error',
                        title: 'Error!',
                        text: 'An error occurred while deleting the category.',
                        confirmButtonColor: '#007bff'
                    });
                }
            }
        }
    </script>
</body>
</html>