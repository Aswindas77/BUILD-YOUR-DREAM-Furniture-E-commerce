<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Add Product</title>
    <!-- Bootstrap CSS -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.12/cropper.min.css" />
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/toastify-js/src/toastify.min.css">
    <script type="text/javascript" src="https://cdn.jsdelivr.net/npm/toastify-js"></script>
    <link rel="stylesheet" href="/public/adminAssets/css/editProduct.css">
</head>

<body>
    <div class="container">
        <div class="form-container">
            <h1>edit Product</h1>
            <form method="post" action="" onsubmit="productAdder(event)" id="add-product-form">
                <input hidden type="text" id="product-name" name="id" value="<%= product._id %>">

                <!-- Product Name -->
                <div class="mb-3">
                    <label for="name" class="form-label">Product Name</label>
                    <input type="text" class="form-control" id="name" name="name" value="<%= product.name%>">
                    <div class="error" id="nameError">Please enter a valid product name (at least 3 characters).</div>

                </div>

                <!-- Description -->
                <div class="mb-3">
                    <label for="description" class="form-label">Description</label>
                    <textarea class="form-control" id="description" name="description"
                        rows="4"><%= product.description%></textarea>
                    <div class="error" id="descriptionError">Description must be at least 10 characters long.</div>
                </div>

                
                <!-- Category -->
                <div class="mb-3">
                    <label for="category" class="form-label">Category</label>
                    <select class="form-select" id="category" name="category">
                        <% categories.forEach(category=> { %>
                            <option value="<%= category._id %>" <%=product.category &&
                                product.category.toString()===category._id.toString() ? 'selected' : "category" %>>
                                <%= category.name %>
                            </option>
                            <% }); %>
                    </select>
                    <div class="error" id="categoryError">Please select a category.</div>
                </div>


                <!-- Sales Price -->
                <div class="mb-3">
                    <label for="salesPrice" class="form-label">Sales Price</label>
                    <input type="number" class="form-control" id="salesPrice" name="salesPrice"
                        value="<%= product.salesPrice%>" step="0.01">
                    <div class="error" id="salesPriceError">Sales price must be greater than 0.</div>
                </div>

                <!-- Product Offer -->
                <div class="mb-3">
                    <label for="productOffer" class="form-label">Product Offer (%)</label>
                    <input type="number" class="form-control" id="productOffer" name="productOffer"
                        value="<%= product.productOffer %>" step="1">
                    <div class="error" id="productOfferError">Offer must be between 0 and 100.</div>
                </div>

                <!-- Stock -->
                <div class="mb-3">
                    <label for="stock" class="form-label">Stock</label>
                    <input type="number" class="form-control" id="stock" name="stock" value="<%= product.stock%>">
                    <div class="error" id="stockError">Stock must be a positive number.</div>
                </div>

                

                <!-- Status -->
                <div class="mb-3">
                    <label for="status" class="form-label">Status</label>
                    <select class="form-select" id="status" name="status" required>
                        <option value="active">Active</option>
                        <option value="inactive">Inactive</option>
                    </select>
                </div>

                <!-- Image Upload -->
                <div class="mb-3 d-flex flex-column align-items-center">
                    <label for="image1" class="text-center mb-2">Image 1</label>
                    <input onchange="cropper(1)" id="image1" type="file" accept="image/*"
                        class="form-control form-control-sm w-50 mb-2 text-center">
                    <div class="cropper-container text-center">

                        <img style="object-fit: cover;" src="<%= product.images[0] %>" alt="Image 1 Preview" id="prev1"
                            class="mb-3 img-fluid">
                        <div class="error" id="image1Error" style="display: none;">Please upload Image 1.</div>

                    </div>
                    <label for="image2" class="text-center mb-2">Image 2</label>
                    <input onchange="cropper(2)" id="image2" type="file" accept="image/*"
                        class="form-control form-control-sm w-50 mb-2 text-center">
                    <div class="cropper-container text-center">
                        <img style="object-fit: cover;" src="<%= product.images[1] %>" alt="Image 2 Preview" id="prev2"
                            class="mb-3 img-fluid">
                        <div class="error" id="image2Error" style="display: none;">Please upload Image 2.</div>

                    </div>

                    <label for="image3" class="text-center mb-2">Image 3</label>
                    <input onchange="cropper(3)" id="image3" type="file" accept="image/*"
                        class="form-control form-control-sm w-50 mb-2 text-center">
                    <div class="cropper-container text-center">

                        <img style="object-fit: cover;" src="<%= product.images[2] %>" alt="Image 3 Preview" id="prev3"
                            class="mb-3 img-fluid">
                    </div>
                    <div class="error" id="image3Error" style="display: none;">Please upload Image 3.</div>
                </div>

                <!-- Submit Button -->
                <button type="submit" id="btn-submit" class="btn btn-primary w-100">update</button>
            </form>
        </div>
    </div>

    <!-- Bootstrap JS -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/js/bootstrap.bundle.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.12/cropper.min.js"></script>
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            
            function validateForm(formData) {
                let isValid = true;
                const errors = {};

                
                const name = document.getElementById("name");
                const description = document.getElementById("description");
                const category = document.getElementById("category");
                const salesPrice = document.getElementById("salesPrice");
                const productOffer = document.getElementById("productOffer");
                const stock = document.getElementById("stock");
                const status = document.getElementById("status");

                
                document.querySelectorAll(".error").forEach(error => {
                    error.style.display = 'none';
                });

                
                if (!name.value || name.value.trim().length < 3) {
                    errors.name = "Product name must be at least 3 characters";
                    document.getElementById("nameError").style.display = 'block';
                    isValid = false;
                }

                
                if (!description.value || description.value.trim().length < 10) {
                    errors.description = "Description must be at least 10 characters";
                    document.getElementById("descriptionError").style.display = 'block';
                    isValid = false;
                }

                
                if (!category.value) {
                    errors.category = "Please select a category";
                    document.getElementById("categoryError").style.display = 'block';
                    isValid = false;
                }

                
                const salesPriceValue = parseFloat(salesPrice.value);
                if (isNaN(salesPriceValue) || salesPriceValue <= 0) {
                    errors.salesPrice = "Sales price must be greater than 0";
                    document.getElementById("salesPriceError").style.display = 'block';
                    isValid = false;
                }

                
                const offerValue = parseFloat(productOffer.value);
                if (isNaN(offerValue) || offerValue < 0 || offerValue > 100) {
                    errors.productOffer = "Offer must be between 0 and 100";
                    document.getElementById("productOfferError").style.display = 'block';
                    isValid = false;
                }

                
                const stockValue = parseInt(stock.value);
                if (isNaN(stockValue) || stockValue < 0) {
                    errors.stock = "Stock must be a positive number";
                    document.getElementById("stockError").style.display = 'block';
                    isValid = false;
                }

                return { isValid, errors };
            }

            
            async function updateProduct(formData) {
                try {
                    let images = [];
                    for (let i = 1; i <= 3; i++) {
                        if (croppers[i]) {
                            const canvas = croppers[i].getCroppedCanvas();
                            const base64Image = canvas.toDataURL('image/png');
                            images.push(base64Image);
                        } else {
                            
                            const prevImg = document.getElementById(`prev${i}`);
                            images.push(prevImg.src);
                        }
                    }

                    const productData = {
                        id: formData.get('id'),
                        name: formData.get('name'),
                        description: formData.get('description'),
                        category: formData.get('category'),
                        salesPrice: formData.get('salesPrice'),
                        productOffer: formData.get('productOffer'),
                        stock: formData.get('stock'),
                        status: formData.get('status'),
                        images: images
                    };

                    const response = await fetch('/admin/updateProduct', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json'
                        },
                        body: JSON.stringify(productData)
                    });

                    const data = await response.json();

                    if (data.success) {
                        Swal.fire({
                            icon: 'success',
                            title: 'Success!',
                            text: 'Product updated successfully',
                            confirmButtonText: 'OK'
                        }).then(() => {
                            window.location.href = "/admin/productManagement";
                        });
                    } else {
                        throw new Error(data.message || 'Failed to update product');
                    }
                } catch (error) {
                    console.error('Error:', error);
                    Swal.fire({
                        icon: 'error',
                        title: 'Error!',
                        text: error.message || 'Failed to update product'
                    });
                }
            }

            
            document.getElementById('add-product-form').addEventListener('submit', function (e) {
                e.preventDefault();

                const formData = new FormData(this);
                const { isValid, errors } = validateForm(formData);

                if (isValid) {
                    updateProduct(formData);
                } else {
                    console.log('Validation errors:', errors);

                }
            });
        });



        
        let croppers = {};
        function cropper(index) {
            const files = document.getElementById(`image${index}`);
            const preview = document.getElementById(`prev${index}`);
            const file = files.files[0];

            if (file) {
                const objectURL = URL.createObjectURL(file);
                preview.src = objectURL;
                preview.style.display = 'block';

                if (croppers[index]) {
                    croppers[index].destroy();
                }

                croppers[index] = new Cropper(preview, {
                    aspectRatio: NaN,
                    cropBoxMovable: true,
                    ready: function () {
                        this.cropper.setCropBoxData({
                            width: 100,
                            height: 100,
                        });
                    },
                });
            }
        }



        function showToast(message, type) {
            Toastify({
                text: message,
                duration: 3000,
                gravity: "top",
                position: "center",
                close: true,
                style: {
                    background: "orange",
                    color: "white",
                    fontWeight: "bold",
                    borderRadius: "8px",
                },
            }).showToast();
        }
    </script>
</body>

</html>