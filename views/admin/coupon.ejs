<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Coupon Management</title>
    
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
    
    <style>
        .coupon-card {
            border: 2px dashed #3498db;
            border-radius: 15px;
            padding: 20px;
            margin-bottom: 20px;
            background: linear-gradient(145deg, #ffffff, #f8f9fa);
            box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);
            transition: transform 0.3s ease;
        }

        .coupon-card:hover {
            transform: translateY(-5px);
        }

        .coupon-code {
            background: #3498db;
            color: white;
            padding: 8px 15px;
            border-radius: 25px;
            font-weight: bold;
            display: inline-block;
            margin-bottom: 10px;
        }

        .coupon-status {
            position: absolute;
            top: 15px;
            right: 15px;
        }

        .status-active {
            color: #2ecc71;
        }

        .status-inactive {
            color: #e74c3c;
        }

        .add-coupon-btn {
            background: linear-gradient(45deg, #3498db, #2ecc71);
            border: none;
            padding: 12px 25px;
            border-radius: 25px;
            color: white;
            font-weight: bold;
            transition: all 0.3s ease;
        }

        .add-coupon-btn:hover {
            transform: scale(1.05);
            box-shadow: 0 5px 15px rgba(52, 152, 219, 0.3);
        }

        .page-title {
            color: #2c3e50;
            margin-bottom: 30px;
            font-weight: bold;
        }

        .coupon-details {
            margin-top: 10px;
            color: #7f8c8d;
        }

        .action-buttons button {
            padding: 6px 12px;
            border-radius: 15px;
            transition: all 0.3s ease;
        }

        .action-buttons button:hover {
            transform: scale(1.1);
        }

        .modal-content {
            border-radius: 15px;
        }

        .modal-header {
            background: linear-gradient(45deg, #3498db, #2ecc71);
            color: white;
            border-radius: 15px 15px 0 0;
        }

        .form-control {
            border-radius: 10px;
            border: 1px solid #bdc3c7;
            padding: 10px 15px;
        }

        .form-control:focus {
            box-shadow: 0 0 0 3px rgba(52, 152, 219, 0.25);
        }
    </style>

</head>

<body>
    <!-- Include Admin Sidebar -->
    <%- include('../partials/admin/adminSidebar') %>

        <div class="container mt-5" style="margin-left: 280px;">
            <div class="d-flex justify-content-between align-items-center mb-4">
                <h2 class="page-title">
                    <i class="fas fa-gift me-2"></i>Coupon Management
                </h2>
                <button class="add-coupon-btn" data-bs-toggle="modal" data-bs-target="#addCouponModal">
                    <i class="fas fa-plus me-2"></i>Add New Coupon
                </button>
            </div>

            <div class="row">
                <% if(coupons&&coupons.length>0) { %>
                    <% coupons.forEach(coupon=> { %>
                        <div class="col-md-6 col-lg-4">
                            <div class="coupon-card position-relative">
                                <div class="coupon-status">
                                    <% if(coupon.isActive) { %>
                                        <i class="fas fa-circle status-active"></i>
                                        <% } else { %>
                                            <i class="fas fa-circle status-inactive"></i>
                                            <% } %>
                                </div>
                                <div class="coupon-code">
                                    <%= coupon.code %>
                                </div>
                                <h5>
                                    <%= coupon.description %>
                                </h5>
                                <div class="coupon-details">
                                    <p><i class="fas fa-percentage me-2"></i>Discount: <%= coupon.discountPercentage %>%
                                    </p>
                                    <p><i class="fas fa-money-bill-wave me-2"></i>Min Purchase: â‚¹<%= coupon.minPurchase
                                            %>
                                    </p>
                                    <p><i class="fas fa-calendar-alt me-2"></i>Valid Till: <%= new
                                            Date(coupon.expiryDate).toLocaleDateString() %>
                                    </p>
                                </div>
                                <div class="action-buttons mt-3">
                                    <button class="btn btn-sm btn-primary me-2"
                                        onclick="editCoupon('<%= coupon._id %>')">
                                        <i class="fas fa-edit"></i>
                                    </button>
                                    <button class="btn btn-sm btn-danger" onclick="deleteCoupon('<%= coupon._id %>')">
                                        <i class="fas fa-trash"></i>
                                    </button>
                                </div>
                            </div>
                        </div>
                        <% }); %>
                            <% }else{ %>
                                <div class="col-12">
                                    <div class="d-flex justify-content-center align-items-center"
                                        style="min-height: 50vh;">
                                        <div class="text-center">
                                            <i class="fas fa-tag fa-4x text-secondary mb-4"></i>
                                            <h2 class="text-muted mb-3">No Coupons Available</h2>
                                            <p class="text-muted">Click the button above to create a new coupon</p>

                                        </div>
                                    </div>
                                </div>
                                <% } %>
            </div>
        </div>

        <!-- Add Coupon Modal -->
        <main class="main-content" inert></main>
        <div class="modal fade" id="addCouponModal" tabindex="-1">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title">Add New Coupon</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                    </div>
                    <div class="modal-body">
                        <form id="addCouponForm">
                            <div class="mb-3">
                                <label class="form-label">Coupon Code</label>
                                <input type="text" class="form-control" name="code">
                                <div class="invalid-feedback"></div>
                            </div>
                            <div class="mb-3">
                                <label class="form-label">Description</label>
                                <input type="text" class="form-control" name="description">
                                <div class="invalid-feedback"></div>
                            </div>
                            <div class="mb-3">
                                <label class="form-label">Discount Percentage</label>
                                <input type="number" class="form-control" name="discountPercentage">
                                <div class="invalid-feedback"></div>
                            </div>
                            <div class="mb-3">
                                <label class="form-label">Minimum Price</label>
                                <input type="number" class="form-control" name="minPurchase">
                                <div class="invalid-feedback"></div>
                            </div>
                            <div class="mb-3">
                                <label class="form-label">Start Date</label>
                                <input type="date" class="form-control" name="startDate">
                                <div class="invalid-feedback"></div>
                            </div>
                            <div class="mb-3">
                                <label class="form-label">End Date</label>
                                <input type="date" class="form-control" name="expiryDate">
                                <div class="invalid-feedback"></div>
                            </div>
                            <button type="submit" class="btn btn-primary w-100">Create Coupon</button>
                        </form>
                    </div>
                </div>
            </div>
        </div>
        <!-- edit coupon modal -->
        <div class="modal fade" id="editCouponModal" tabindex="-1">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title">Edit Coupon</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                    </div>
                    <div class="modal-body">
                        <form id="editCouponForm">
                            <input type="hidden" name="id">
                            <div class="mb-3">
                                <label class="form-label">Coupon Code</label>
                                <input type="text" class="form-control" name="code">
                                <div class="invalid-feedback"></div>
                            </div>
                            <div class="mb-3">
                                <label class="form-label">Description</label>
                                <input type="text" class="form-control" name="description">
                                <div class="invalid-feedback"></div>
                            </div>
                            <div class="mb-3">
                                <label class="form-label">Discount Percentage</label>
                                <input type="number" class="form-control" name="discountPercentage">
                                <div class="invalid-feedback"></div>
                            </div>
                            <div class="mb-3">
                                <label class="form-label">Minimum Price</label>
                                <input type="number" class="form-control" name="minPurchase">
                                <div class="invalid-feedback"></div>
                            </div>
                            <div class="mb-3">
                                <label class="form-label">Start Date</label>
                                <input type="date" class="form-control" name="startDate">
                                <div class="invalid-feedback"></div>
                            </div>
                            <div class="mb-3">
                                <label class="form-label">End Date</label>
                                <input type="date" class="form-control" name="expiryDate">
                                <div class="invalid-feedback"></div>
                            </div>
                            <button type="submit" class="btn btn-success w-100">Update Coupon</button>
                        </form>
                    </div>
                </div>
            </div>
        </div>
        </main>

        <!-- Bootstrap JS and dependencies -->
        <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
        <!-- SweetAlert2 -->
        <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

        <script>

            document.getElementById('addCouponForm').addEventListener('submit', async (e) => {
                e.preventDefault();
                const form = e.target;
                const formData = new FormData(form);
                const data = Object.fromEntries(formData.entries());

                let isValid = true;


                let code = document.getElementsByName("code")[0];
                let description = document.getElementsByName("description")[0];
                let discountPercentage = document.getElementsByName("discountPercentage")[0];
                let minPurchase = document.getElementsByName("minPurchase")[0];
                let startDate = document.getElementsByName("startDate")[0];
                let expiryDate = document.getElementsByName("expiryDate")[0];


                document.querySelectorAll(".invalid-feedback").forEach(el => el.style.display = "none");
                document.querySelectorAll(".form-control").forEach(input => input.classList.remove("is-invalid"));


                function showError(input, message) {
                    input.classList.add("is-invalid");
                    const error = input.nextElementSibling;
                    if (error && error.classList.contains("invalid-feedback")) {
                        error.textContent = message;
                        error.style.display = "block";
                    }
                    isValid = false;
                }


                let today = new Date();
                today.setHours(0, 0, 0, 0);
                let start = startDate ? new Date(startDate.value) : null;
                let expiry = new Date(expiryDate.value);


                if (!code.value || code.value.length < 5) {
                    showError(code, "Coupon code must be at least 5 characters long.");
                }

                if (!description.value || description.value.trim() === "") {
                    showError(description, "Description cannot be empty.");
                }

                const discountValue = parseFloat(discountPercentage.value);
                if (isNaN(discountValue) || discountValue <= 0 || discountValue >=100) {
                    showError(discountPercentage, "Discount must be between 1 and 99.");
                }

                if (!minPurchase.value || minPurchase.value <= 0) {
                    showError(minPurchase, "Minimum purchase must be greater than 0.");
                }

                if (startDate && !startDate.value) {
                    showError(startDate, "Start date is required.");
                } else if (start && start < today) {
                    showError(startDate, "Start date cannot be in the past.");
                }

                if (!expiryDate.value) {
                    showError(expiryDate, "End date is required.");
                } else if (start && expiry <= start) {
                    showError(expiryDate, "End date must be after start date.");
                } else if (expiry <= today) {
                    showError(expiryDate, "End date must be in the future.");
                }

                if (!isValid) {
                    return;
                }

                try {
                    const response = await fetch('/admin/addCoupon', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json'
                        },
                        body: JSON.stringify(data)
                    });
                    console.log("dataa", data)

                    const result = await response.json();


                    if (response.ok) {

                        Swal.fire({
                            icon: 'success',
                            title: 'success...',
                            text: 'coupen added'
                        })
                            .then(() => {
                                location.reload();
                            });
                    } else {
                        if (result.message === "Coupon code already exists") {
                            showError(code, result.message);
                        } else {
                            Swal.fire({
                                icon: 'error',
                                title: 'Oops...',
                                text: result.message || "Failed to add coupon"
                            });
                        }
                    }
                } catch (error) {


                    console.log(error);

                    Swal.fire({
                        icon: 'error',
                        title: 'Oops...',
                        text: 'Something went !'
                    });
                }
            });

            // Delete Coupon
            function deleteCoupon(couponId) {
                Swal.fire({
                    title: 'Are you sure?',
                    text: "You won't be able to revert this!",
                    icon: 'warning',
                    showCancelButton: true,
                    confirmButtonColor: '#3085d6',
                    cancelButtonColor: '#d33',
                    confirmButtonText: 'Yes, delete it!'
                }).then(async (result) => {
                    if (result.isConfirmed) {
                        try {
                            const response = await fetch(`/admin/deleteCoupon/${couponId}`, {
                                method: 'DELETE'
                            });

                            if (response.ok) {
                                Swal.fire(
                                    'Deleted!',
                                    'Coupon has been deleted.',
                                    'success'
                                ).then(() => {
                                    location.reload();
                                });
                            }
                        } catch (error) {
                            Swal.fire({
                                icon: 'error',
                                title: 'Oops...',
                                text: 'Something went wrong!'
                            });
                        }
                    }
                });
            }


            async function editCoupon(couponId) {
                try {

                    const response = await fetch(`/admin/editCoupon/${couponId}`);
                    if (!response.ok) {
                        throw new Error(`Failed to fetch coupon data: ${response.statusText}`);
                    }
                    const data = await response.json();
                    if (!data.success) {
                        throw new Error(data.message || "Coupon fetch failed");
                    }

                    const coupon = data.coupon;


                    const editForm = document.getElementById('editCouponForm');
                    editForm.querySelector('input[name="id"]').value = coupon._id;
                    editForm.querySelector('input[name="code"]').value = coupon.code;
                    editForm.querySelector('input[name="description"]').value = coupon.description;
                    editForm.querySelector('input[name="discountPercentage"]').value = coupon.discountPercentage;
                    editForm.querySelector('input[name="minPurchase"]').value = coupon.minPurchase;


                    const startDate = new Date(coupon.startDate).toISOString().split('T')[0];
                    const expiryDate = new Date(coupon.expiryDate).toISOString().split('T')[0];
                    editForm.querySelector('input[name="startDate"]').value = startDate;
                    editForm.querySelector('input[name="expiryDate"]').value = expiryDate;


                    const editModal = new bootstrap.Modal(document.getElementById('editCouponModal'));
                    editModal.show();

                } catch (error) {
                    console.error('Error fetching coupon data:', error);
                    Swal.fire({
                        icon: 'error',
                        title: 'Error',
                        text: 'Failed to fetch coupon data'
                    });
                }
            }


            document.getElementById('editCouponForm').addEventListener('submit', async (e) => {
                e.preventDefault();
                const form = e.target;
                const formData = new FormData(form);
                const data = Object.fromEntries(formData.entries());


                try {
                    const response = await fetch(`/admin/updateCoupon/${data.id}`, {
                        method: 'PUT',
                        headers: {
                            'Content-Type': 'application/json'
                        },
                        body: JSON.stringify(data)
                    });

                    if (response.ok) {

                        Swal.fire({
                            icon: 'success',
                            title: 'Success',
                            text: 'Coupon updated successfully'
                        }).then(() => {
                            location.reload();
                        });
                    } else {
                        throw new Error('Failed to update coupon');
                    }
                } catch (error) {
                    console.error('Error updating coupon:', error);
                    Swal.fire({
                        icon: 'error',
                        title: 'Error',
                        text: 'Failed to update coupon'
                    });
                }
            });

        </script>
</body>

</html>