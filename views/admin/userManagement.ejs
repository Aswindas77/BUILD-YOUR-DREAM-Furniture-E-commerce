<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>User Management</title>
    <!-- Add your CSS file link here if necessary -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css" rel="stylesheet">
    <style>
        .access-btn {
            min-width: 80px;
            position: relative;
        }
        .access-btn:disabled {
            opacity: 0.7;
        }
        .table-dark {
            background-color: #343a40;
        }
        .table td {
            vertical-align: middle;
        }
    </style>
</head>
<body>
    <div class="container my-4">
        <h3 class="my-4">User Management</h3>
        <table class="table table-striped table-bordered">
            <thead class="table-dark">
                <tr>
                    <th>Name</th>
                    <th>Email</th>
                    <th>Registration Details</th>
                    <th>Access</th>
                </tr>
            </thead>
            <tbody>
                <% for(let i = 0; i < users.length; i++) { %>
                    <tr>
                        <td><%= users[i].username %></td>
                        <td><%= users[i].email %></td>
                        <td><%= new Date(users[i].createdAt).toDateString() %></td>
                        <td>
                            <button 
                                class="btn <%= users[i].isBlocked ? 'btn-danger' : 'btn-success' %> btn-sm access-btn"
                                data-id="<%= users[i]._id %>"
                                data-status="<%= users[i].isBlocked ? 'blocked' : 'active' %>"
                            >
                                <span class="button-text">
                                    <%= users[i].isBlocked ? 'Unblock' : 'Block' %>
                                </span>
                                <span class="spinner-border spinner-border-sm d-none" role="status">
                                    <span class="visually-hidden">Loading...</span>
                                </span>
                            </button>
                        </td>
                    </tr>
                <% } %>
            </tbody>
        </table>
    </div>

    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const accessButtons = document.querySelectorAll('.access-btn');
        
            accessButtons.forEach(button => {
                button.addEventListener('click', async function () {
                    try {
                        const userId = this.dataset.id;
                        const currentStatus = this.dataset.status;
                        const action = currentStatus === 'active' ? 'block' : 'unblock';
                        const buttonText = this.querySelector('.button-text');
                        const spinner = this.querySelector('.spinner-border');
        
                        // Disable button and show spinner
                        this.disabled = true;
                        buttonText.classList.add('d-none');
                        spinner.classList.remove('d-none');
        
                        // Make API call
                        const response = await fetch(`/admin/users/toggle/${userId}/${action}`, {
                            method: 'PATCH',
                            headers: {
                                'Content-Type': 'application/json'
                            }
                        });
        
                        const data = await response.json();
        
                        if (response.ok) {
                            // Update button state
                            const newStatus = currentStatus === 'active' ? 'blocked' : 'active';
                            this.dataset.status = newStatus;
                            
                            // Update button appearance
                            if (newStatus === 'blocked') {
                                this.classList.remove('btn-success');
                                this.classList.add('btn-danger');
                                buttonText.textContent = 'Unblock';
                            } else {
                                this.classList.remove('btn-danger');
                                this.classList.add('btn-success');
                                buttonText.textContent = 'Block';
                            }
                            
                            // Show success message
                            alert(data.message);
                        } else {
                            throw new Error(data.message || 'Failed to update user status');
                        }
                    } catch (error) {
                        console.error('Error:', error);
                        alert(error.message || 'Failed to update user status');
                    } finally {
                        // Re-enable button and hide spinner
                        this.disabled = false;
                        buttonText.classList.remove('d-none');
                        spinner.classList.add('d-none');
                    }
                });
            });
        });
    </script>
</body>
</html>
