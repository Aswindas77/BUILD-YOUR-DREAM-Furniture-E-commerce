<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Admin Dashboard</title>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/html2pdf.js/0.10.1/html2pdf.bundle.min.js"></script>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
    <link rel="stylesheet" href="/public/adminAssets/css/adminDashboard.css">
    <style>
        .dashboard-title {
            text-align: center;
            color: #2c3e50;
            margin: 20px 0;
            font-size: 2.5rem;
            font-weight: 700;
            text-transform: uppercase;
            letter-spacing: 2px;
        }

        .summary-cards {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(280px, 1fr));
            gap: 25px;
            padding: 20px;
            max-width: 1400px;
            margin: 0 auto;
        }

        .card {
            background: white;
            border-radius: 20px;
            padding: 25px;
            box-shadow: 0 10px 20px rgba(0, 0, 0, 0.1);
            transition: all 0.3s ease;
            position: relative;
            overflow: hidden;
            display: flex;
            flex-direction: column;
            align-items: center;
            text-align: center;
        }

        .card:hover {
            transform: translateY(-5px);
            box-shadow: 0 15px 30px rgba(0, 0, 0, 0.15);
        }

        .card::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 5px;
            background: linear-gradient(90deg, #3498db, #2ecc71);
        }

        .card i {
            font-size: 2.5rem;
            margin-bottom: 15px;
            background: #f8f9fa;
            padding: 15px;
            border-radius: 50%;
            color: #2c3e50;
        }

        .users-card i {
            color: #3498db;
        }

        .orders-card i {
            color: #2ecc71;
        }

        .products-card i {
            color: #e74c3c;
        }

        .delivered-card i {
            color: #9b59b6;
        }

        .revenue-card i {
            color: #f1c40f;
        }

        .returns-card i {
            color: #e67e22;
        }

        .card-title {
            font-size: 1.1rem;
            color: #7f8c8d;
            margin-bottom: 10px;
            font-weight: 600;
            text-transform: uppercase;
            letter-spacing: 1px;
        }

        .card-value {
            font-size: 2rem;
            font-weight: 700;
            color: #2c3e50;
            margin-top: 5px;
        }

        @media (max-width: 768px) {
            .summary-cards {
                grid-template-columns: repeat(auto-fit, minmax(240px, 1fr));
                gap: 15px;
                padding: 15px;
            }

            .card {
                padding: 20px;
            }

            .card-value {
                font-size: 1.5rem;
            }
        }

        .top-selling-container {
            display: grid;
            grid-template-columns: repeat(2, 1fr);
            gap: 25px;
            padding: 20px;
            max-width: 1400px;
            margin: 20px auto;
        }

        .top-box {
            background: white;
            border-radius: 20px;
            box-shadow: 0 10px 20px rgba(0, 0, 0, 0.1);
            overflow: hidden;
            height: 600px;
            display: flex;
            flex-direction: column;
        }

        .top-box-header {
            padding: 20px;
            background: linear-gradient(to right, #3498db, #2ecc71);
            color: white;
        }

        .top-box-header h3 {
            margin: 0;
            font-size: 1.3rem;
            display: flex;
            align-items: center;
            gap: 10px;
        }

        .top-box-content {
            padding: 20px;
            overflow-y: auto;
            flex-grow: 1;
        }

        .top-item {
            display: flex;
            justify-content: space-between;
            align-items: center;
            padding: 15px;
            border-bottom: 1px solid #eee;
            transition: all 0.3s ease;
        }

        .top-item:hover {
            background: #f8f9fa;
            transform: translateX(5px);
        }

        .item-info {
            display: flex;
            align-items: center;
            gap: 15px;
            flex: 1;
        }

        .item-image,
        .category-icon {
            width: 60px;
            height: 60px;
            border-radius: 12px;
            overflow: hidden;
            display: flex;
            align-items: center;
            justify-content: center;
            background: #f0f2f5;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
        }

        .item-image img {
            width: 100%;
            height: 100%;
            object-fit: cover;
        }

        .category-icon i {
            font-size: 1.8rem;
            color: #3498db;
        }

        .item-details {
            flex: 1;
        }

        .item-details h4 {
            margin: 0;
            font-size: 1.1rem;
            color: #2c3e50;
            font-weight: 600;
        }

        .item-price,
        .item-count {
            color: #7f8c8d;
            font-size: 0.95rem;
            margin: 5px 0 0 0;
        }

        .item-stats {
            display: flex;
            flex-direction: column;
            align-items: flex-end;
            gap: 8px;
            min-width: 120px;
        }

        .sales-count {
            font-size: 0.95rem;
            color: #2c3e50;
            font-weight: 500;
        }

        .progress-bar {
            width: 100px;
            height: 6px;
            background: #eee;
            border-radius: 3px;
            overflow: hidden;
        }

        .progress {
            height: 100%;
            background: linear-gradient(to right, #3498db, #2ecc71);
            border-radius: 3px;
            transition: width 0.3s ease;
        }

        .no-data {
            text-align: center;
            padding: 40px 20px;
            color: #7f8c8d;
        }

        .no-data i {
            font-size: 3rem;
            margin-bottom: 15px;
            color: #bdc3c7;
        }

        @media (max-width: 768px) {
            .top-selling-container {
                grid-template-columns: 1fr;
            }

            .top-box {
                height: 500px;
            }

            .item-stats {
                min-width: 90px;
            }
        }

        .graph-container {
            padding: 20px;
            max-width: 1400px;
            margin: 20px auto;
        }

        .graph-card {
            background: white;
            border-radius: 20px;
            box-shadow: 0 10px 20px rgba(0, 0, 0, 0.1);
            overflow: hidden;
        }

        .graph-header {
            padding: 20px;
            background: linear-gradient(to right, #3498db, #2ecc71);
            color: white;
            display: flex;
            justify-content: space-between;
            align-items: center;
        }

        .graph-title {
            margin: 0;
            font-size: 1.3rem;
            font-weight: 600;
        }

        .period-selector {
            display: flex;
            gap: 10px;
        }

        .period-btn {
            padding: 8px 16px;
            border: none;
            border-radius: 20px;
            background: rgba(255, 255, 255, 0.2);
            color: white;
            cursor: pointer;
            transition: all 0.3s ease;
            font-weight: 500;
        }

        .period-btn:hover {
            background: rgba(255, 255, 255, 0.3);
        }

        .period-btn.active {
            background: white;
            color: #2c3e50;
        }

        .graph-content {
            padding: 20px;
            height: 400px;
        }

        @media (max-width: 768px) {
            .graph-header {
                flex-direction: column;
                gap: 15px;
            }

            .period-selector {
                width: 100%;
                justify-content: center;
                flex-wrap: wrap;
            }

            .graph-content {
                height: 300px;
            }
        }
    </style>
</head>

<body>
    <h1 class="dashboard-title">Dashboard</h1>

    
    <div class="summary-cards">
        <div class="card users-card">
            <i class="fas fa-users"></i>
            <div class="card-title">Total Users</div>
            <div class="card-value">
                <%= totalUsers %>
            </div>
        </div>
        <div class="card orders-card">
            <i class="fas fa-shopping-cart"></i>
            <div class="card-title">Total Orders</div>
            <div class="card-value">
                <%= totalOrders %>
            </div>
        </div>
        <div class="card products-card">
            <i class="fas fa-box"></i>
            <div class="card-title">Total Products</div>
            <div class="card-value">
                <%= totalProducts %>
            </div>
        </div>
        <div class="card delivered-card">
            <i class="fas fa-truck"></i>
            <div class="card-title">Delivered Products</div>
            <div class="card-value">
                <%= totalDeliveredProducts %>
            </div>
        </div>
        <div class="card revenue-card">
            <i class="fas fa-rupee-sign"></i>
            <div class="card-title">Total Revenue</div>
            <div class="card-value">â‚¹<%= Number(totalRevenue).toFixed(2) %>
            </div>
        </div>
        <div class="card returns-card">
            <i class="fas fa-undo"></i>
            <div class="card-title">Total Returns</div>
            <div class="card-value">
                <%= totalReturns %>
            </div>
        </div>
    </div>



     <!-- Graph Section -->
     <div class="graph-container">
        <div class="graph-card">
            <div class="graph-header">
                <h3 class="graph-title">Sales & Revenue Overview</h3>
                <div class="period-selector">
                    <button class="period-btn active" data-period="daily">Daily</button>
                    <button class="period-btn" data-period="weekly">Weekly</button>
                    <button class="period-btn" data-period="monthly">Monthly</button>
                    <button class="period-btn" data-period="yearly">Yearly</button>
                </div>
            </div>
            <div class="graph-content">
                <canvas id="salesRevenueChart"></canvas>
            </div>
        </div>
    </div>
   
    <div class="top-selling-container">
      
        <div class="top-box products-box">
            <div class="top-box-header">
                <h3><i class="fas fa-crown"></i> Top 10 Selling Products</h3>
            </div>
            <div class="top-box-content">
                <% if (typeof topProducts !=='undefined' && topProducts.length> 0) { %>
                    <% topProducts.forEach(product=> { %>
                        <div class="top-item">
                            <div class="item-info">
                                <div class="item-image">
                                    <img src="<%= product.images[0] %>" alt="<%= product.name %>">
                                </div>
                                <div class="item-details">
                                    <h4>
                                        <%= product.name %>
                                    </h4>

                                </div>
                            </div>
                            <div class="item-stats">
                                <span class="sales-count">
                                    <%= product.soldCount %> sold
                                </span>

                            </div>
                        </div>
                        <% }); %>
                            <% } else { %>
                                <div class="no-data">
                                    <i class="fas fa-box-open"></i>
                                    <p>No product data available</p>
                                </div>
                                <% } %>
            </div>
        </div>

        
        <div class="top-box categories-box">
            <div class="top-box-header">
                <h3><i class="fas fa-chart-pie"></i> Top 10 Categories</h3>
            </div>
            <div class="top-box-content">
                <% if (typeof topCategories !=='undefined' && topCategories.length> 0) { %>
                    <% topCategories.forEach(category=> { %>
                        <div class="top-item">
                            <div class="item-info">
                                
                                <div class="item-details">
                                    <h4>
                                        <%= category.name %>
                                    </h4>
                                    <p class="item-count">
                                        <%= category.productCount %> products
                                    </p>
                                </div>
                            </div>
                            <div class="item-stats">
                                <span class="sales-count">
                                    <%= category.totalSales %> sales
                                </span>

                            </div>
                        </div>
                        <% }); %>
                            <% } else { %>
                                <div class="no-data">
                                    <i class="fas fa-folders"></i>
                                    <p>No category data available</p>
                                </div>
                                <% } %>
            </div>
        </div>
    </div>

   

    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const periodButtons = document.querySelectorAll('.period-button');
            const tableBody = document.querySelector('.sales-table tbody');

            // Function to format date
            function formatDate(dateString) {
                const date = new Date(dateString);
                return date.toLocaleDateString('en-IN', {
                    day: '2-digit',
                    month: 'short',
                    year: 'numeric'
                });
            }

            // Function to format currency
            function formatCurrency(amount) {
                return 'â‚¹' + Number(amount).toLocaleString('en-IN');
            }

            // Function to update table with new data
            function updateTable(orders) {
                console.log(orders)
                tableBody.innerHTML = orders.map(order => `
                    <tr>
                        <td>#${order._id}</td>
                        <td>${order.userId}</td>
                        <td>${order.items.length} items</td>
                        <td>${formatCurrency(order.totalAmount)}</td>
                        <td>${order.paymentStatus}</td>
                        <td>${order.paymentMethod}</td>
                        <td>${order.status}</td>
                        <td>${formatDate(order.createdAt)}</td>
                    </tr>
                `).join('');
            }

            // Add click event to all period buttons
            periodButtons.forEach(button => {
                button.addEventListener('click', async function () {
                    // Remove active class from all buttons
                    periodButtons.forEach(btn => btn.classList.remove('active'));
                    // Add active class to clicked button
                    this.classList.add('active');

                    const period = this.textContent.toLowerCase();

                    try {
                        const response = await fetch(`/admin/orders/${period}`);
                        if (!response.ok) {
                            throw new Error('Network response was not ok');
                        }
                        const data = await response.json();
                        updateTable(data);
                    } catch (error) {
                        console.error('Error fetching orders:', error);

                    }
                });
            });

            // Trigger click on Daily button to load initial data
            document.querySelector('.period-button').click();

            // Add PDF export functionality
            const pdfButton = document.querySelector('.pdf-button');

            function generatePDF() {
                // Create PDF content container
                const pdfContent = document.createElement('div');
                pdfContent.classList.add('pdf-wrapper');

                // Add header with logo and company info
                const header = document.createElement('div');
                header.classList.add('pdf-header');



                // Add report title and date
                const titleSection = document.createElement('div');
                titleSection.classList.add('pdf-title-section');
                const activePeriod = document.querySelector('.period-button.active').textContent;
                const currentDate = new Date().toLocaleDateString('en-IN', {
                    day: '2-digit',
                    month: 'long',
                    year: 'numeric'
                });
                titleSection.innerHTML = `
                    <h2>Sales Report</h2>
                    <div class="report-meta">
                        <p><strong>Period:</strong> ${activePeriod}</p>
                        <p><strong>Generated on:</strong> ${currentDate}</p>
                    </div>
                `;
                pdfContent.appendChild(titleSection);

                // Add summary section
                const summarySection = document.createElement('div');
                summarySection.classList.add('pdf-summary');
                summarySection.innerHTML = `
                    <div class="summary-grid">
                        <div class="summary-item">
                            <h3>Total Orders</h3>
                            <p>${document.querySelector('.orders-card .card-value').textContent}</p>
                        </div>
                        <div class="summary-item">
                            <h3>Total Revenue</h3>
                            <p>${document.querySelector('.revenue-card .card-value').textContent}</p>
                        </div>
                        <div class="summary-item">
                            <h3>Total Products</h3>
                            <p>${document.querySelector('.products-card .card-value').textContent}</p>
                        </div>
                    </div>
                `;
                pdfContent.appendChild(summarySection);

                // Add main table
                const tableSection = document.createElement('div');
                tableSection.classList.add('pdf-table-section');
                const tableClone = document.querySelector('.sales-table').cloneNode(true);
                tableClone.classList.add('pdf-table');
                tableSection.appendChild(tableClone);
                pdfContent.appendChild(tableSection);

                // Add footer
                const footer = document.createElement('div');
                footer.classList.add('pdf-footer');

                pdfContent.appendChild(footer);

                // Add CSS styles specific to PDF
                const style = document.createElement('style');
                style.textContent = `
                    .pdf-wrapper {
                        padding: 20px;
                        background: white;
                        font-family: Arial, sans-serif;
                    }
                    .pdf-header {
                        text-align: center;
                        margin-bottom: 20px;
                        padding-bottom: 20px;
                        border-bottom: 2px solid #333;
                    }
                    .company-info h1 {
                        color: #333;
                        margin-bottom: 10px;
                    }
                    .pdf-title-section {
                        text-align: center;
                        margin-bottom: 30px;
                    }
                    .report-meta {
                        margin-top: 10px;
                        font-size: 14px;
                    }
                    .pdf-summary {
                        margin-bottom: 30px;
                    }
                    .summary-grid {
                        display: grid;
                        grid-template-columns: repeat(3, 1fr);
                        gap: 20px;
                        margin-bottom: 20px;
                    }
                    .summary-item {
                        text-align: center;
                        padding: 15px;
                        background: #f8f9fa;
                        border-radius: 8px;
                    }
                    .pdf-table {
                        width: 100%;
                        border-collapse: collapse;
                        margin-bottom: 30px;
                    }
                    .pdf-table th, .pdf-table td {
                        border: 1px solid #ddd;
                        padding: 12px;
                        text-align: left;
                    }
                    .pdf-table th {
                        background-color: #f4f4f4;
                        font-weight: bold;
                    }
                    .pdf-footer {
                        text-align: center;
                        margin-top: 30px;
                        padding-top: 20px;
                        border-top: 1px solid #ddd;
                        font-size: 12px;
                        color: #666;
                    }
                `;
                pdfContent.appendChild(style);

                // PDF export options
                const opt = {
                    margin: [0.5, 0.5],
                    filename: `Build your dream-sales-report-${activePeriod.toLowerCase()}-${new Date().toISOString().split('T')[0]}.pdf`,
                    image: { type: 'jpeg', quality: 0.98 },
                    html2canvas: { scale: 2 },
                    jsPDF: { unit: 'in', format: 'a4', orientation: 'landscape' }
                };

                // Generate PDF
                html2pdf().set(opt).from(pdfContent).save();
            }

            // Add click event to PDF button
            pdfButton.addEventListener('click', generatePDF);
        });
    </script>

    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            let salesRevenueChart = null;

            // Function to format currency
            function formatCurrency(amount) {
                return 'â‚¹' + Number(amount).toLocaleString('en-IN');
            }

            // Function to update chart
            async function updateChart(period) {
                try {
                    const response = await fetch(`/admin/dashboard/analytics/${period}`);
                    if (!response.ok) throw new Error('Failed to fetch data');
                    const data = await response.json();

                    if (salesRevenueChart) {
                        salesRevenueChart.destroy();
                    }

                    const ctx = document.getElementById('salesRevenueChart').getContext('2d');
                    salesRevenueChart = new Chart(ctx, {
                        type: 'bar',
                        data: {
                            labels: data.labels,
                            datasets: [
                                {
                                    label: 'Sales',
                                    data: data.sales,
                                    backgroundColor: 'rgba(52, 152, 219, 0.8)',
                                    borderColor: '#3498db',
                                    borderWidth: 1,
                                    borderRadius: 5,
                                    barPercentage: 0.6
                                },
                                {
                                    label: 'Revenue (â‚¹)',
                                    data: data.revenue,
                                    backgroundColor: 'rgba(46, 204, 113, 0.8)',
                                    borderColor: '#2ecc71',
                                    borderWidth: 1,
                                    borderRadius: 5,
                                    barPercentage: 0.6
                                }
                            ]
                        },
                        options: {
                            responsive: true,
                            maintainAspectRatio: false,
                            interaction: {
                                intersect: false,
                                mode: 'index'
                            },
                            plugins: {
                                legend: {
                                    position: 'top',
                                    labels: {
                                        font: {
                                            size: 12,
                                            weight: 'bold'
                                        },
                                        padding: 20
                                    }
                                },
                                tooltip: {
                                    callbacks: {
                                        label: function (context) {
                                            let label = context.dataset.label || '';
                                            if (label) {
                                                label += ': ';
                                            }
                                            if (label.includes('Revenue')) {
                                                label += formatCurrency(context.parsed.y);
                                            } else {
                                                label += context.parsed.y;
                                            }
                                            return label;
                                        }
                                    }
                                }
                            },
                            scales: {
                                x: {
                                    grid: {
                                        display: false
                                    },
                                    ticks: {
                                        font: {
                                            size: 11
                                        }
                                    }
                                },
                                y: {
                                    beginAtZero: true,
                                    grid: {
                                        color: 'rgba(0, 0, 0, 0.1)'
                                    },
                                    ticks: {
                                        font: {
                                            size: 11
                                        }
                                    }
                                }
                            }
                        }
                    });
                } catch (error) {
                    console.error('Error updating chart:', error);
                }
            }

            // Add click event listeners to period buttons
            document.querySelectorAll('.period-btn').forEach(button => {
                button.addEventListener('click', function () {
                    document.querySelectorAll('.period-btn').forEach(btn => {
                        btn.classList.remove('active');
                    });
                    this.classList.add('active');
                    updateChart(this.dataset.period);
                });
            });

            
            updateChart('daily');
        });
    </script>
</body>

</html>