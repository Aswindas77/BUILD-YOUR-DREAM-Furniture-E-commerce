<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Admin Dashboard</title>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/html2pdf.js/0.10.1/html2pdf.bundle.min.js"></script>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
            font-family: Arial, sans-serif;
        }

        body {
            background-color: #f0f0f0;
            padding: 20px;
        }

        .dashboard-title {
            font-size: 24px;
            margin-bottom: 20px;
            color: #333;
        }

        .summary-cards {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
            gap: 20px;
            margin-bottom: 30px;
        }

        .card {
            padding: 20px;
            border-radius: 8px;
            color: white;
            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
        }

        .users-card {
            background-color: #4a9cf5;
        }

        .orders-card {
            background-color: #6ef38d;
        }

        .products-card {
            background-color: #ffce39;
        }

        .delivered-card {
            background-color: #ff3939;
        }

        .revenue-card {
            background-color: #ffce39;
        }

        .returns-card {
            background-color: #ff3939;
        }

        .card-title {
            font-size: 18px;
            margin-bottom: 10px;
        }

        .card-value {
            font-size: 24px;
            font-weight: bold;
        }

        .sales-section {
            background-color: white;
            border-radius: 8px;
            padding: 20px;
            margin-bottom: 20px;
            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
        }

        .sales-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 20px;
        }

        .sales-title {
            font-size: 20px;
            color: #333;
        }

        .period-buttons {
            display: flex;
            gap: 10px;
            background-color: #f8f9fa;
            padding: 5px;
            border-radius: 6px;
        }

        .period-button {
            padding: 8px 16px;
            color: #333;
            border: none;
            border-radius: 4px;
            cursor: pointer;
            background: none;
            transition: all 0.3s ease;
        }

        .period-button:hover {
            background-color: #e9ecef;
        }

        .period-button.active {
            background-color: #007bff;
            color: white;
        }

        .export-buttons {
            display: flex;
            gap: 10px;
            margin-top: 10px;
        }

        .export-button {
            padding: 8px 16px;
            border: none;
            border-radius: 4px;
            cursor: pointer;
            display: flex;
            align-items: center;
            gap: 5px;
            transition: all 0.3s ease;
        }

        .excel-button {
            background-color: #28a745;
            color: white;
        }

        .pdf-button {
            background-color: #dc3545;
            color: white;
        }

        .export-button:hover {
            opacity: 0.9;
        }

        .sales-table {
            width: 100%;
            border-collapse: collapse;
            margin-top: 20px;
        }

        .sales-table th,
        .sales-table td {
            padding: 12px;
            text-align: left;
            border-bottom: 1px solid #eee;
        }

        .sales-table th {
            background-color: #f8f9fa;
            font-weight: 600;
            color: #333;
        }

        .sales-table tr:hover {
            background-color: #f8f9fa;
        }

        .pagination {
            margin-top: 20px;
            text-align: center;
            color: #666;
        }

        /* Add styles for PDF export */
        .pdf-wrapper {
            padding: 20px;
            background: white;
        }

        .pdf-table {
            width: 100%;
            border-collapse: collapse;
            margin-top: 20px;
        }

        .pdf-table th,
        .pdf-table td {
            border: 1px solid #ddd;
            padding: 8px;
            text-align: left;
        }

        .pdf-table th {
            background-color: #f4f4f4;
        }
    </style>
</head>

<body>
    <h1 class="dashboard-title">Dashboard</h1>

    <!-- Summary Cards -->
    <div class="summary-cards">
        <div class="card users-card">
            <div class="card-title">Total Users</div>
            <div class="card-value">
                <%= totalUsers %>
            </div>
        </div>
        <div class="card orders-card">
            <div class="card-title">Total Orders</div>
            <div class="card-value">
                <%= totalOrders %>
            </div>
        </div>
        <div class="card products-card">
            <div class="card-title">Total Products</div>
            <div class="card-value">
                <%= totalProducts %>
            </div>
        </div>
        <div class="card delivered-card">
            <div class="card-title">Delivered Products</div>
            <div class="card-value">
                <%= totalDeliveredProducts %>
            </div>
        </div>
        <div class="card revenue-card">
            <div class="card-title">Total Revenue</div>
            <div class="card-value">₹<%= totalRevenue %>
            </div>
        </div>
        <div class="card returns-card">
            <div class="card-title">Total Returns</div>
            <div class="card-value">
                <%= totalReturns %>
            </div>
        </div>
    </div>

    <!-- Sales Report Section -->
    <div class="sales-section">
        <div class="sales-header">
            <h2 class="sales-title">Sales Report</h2>
            <div class="period-buttons">
                <button class="period-button active" data-period="daily">Daily</button>
                <button class="period-button" data-period="weekly">Weekly</button>
                <button class="period-button" data-period="monthly">Monthly</button>
                <button class="period-button" data-period="yearly">Yearly</button>
            </div>
        </div>

        <div class="export-buttons">
            <button class="export-button excel-button" onclick="exportReport('excel')">
                <i class="fas fa-file-excel"></i> Export to Excel
            </button>
            <button class="export-button pdf-button" onclick="exportSalesReportToPDF()">
                <i class="fas fa-file-pdf"></i> Export to PDF
            </button>
        </div>

        <table class="sales-table">
            <thead>
                <tr>
                    <th>Date</th>
                    <th>Orders</th>
                    <th>Revenue</th>
                    <th>Coupon Discount</th>
                    <th>Product Discount</th>
                </tr>
            </thead>
            <tbody id="salesTableBody">
                <% if (dailySales && dailySales.length> 0) { %>
                    <% dailySales.forEach(data=> { %>
                        <tr>
                            <td>
                                <%= data.date %>
                            </td>
                            <td>
                                <%= data.totalOrders %>
                            </td>
                            <td>₹<%= data.totalRevenue %>
                            </td>
                            <td>₹<%= data.couponDiscount || 0 %>
                            </td>
                            <td>₹<%= data.totalProductDiscount || 0 %>
                            </td>
                        </tr>
                        <% }); %>
                            <% } else { %>
                                <tr>
                                    <td colspan="5" style="text-align: center;">No sales data available</td>
                                </tr>
                                <% } %>
            </tbody>
        </table>

        <% if (totalPages.daily> 1) { %>
            <div class="pagination">
                Page <%= currentPage.daily %> of <%= totalPages.daily %>
            </div>
            <% } %>
    </div>

    <script>
        // Make sure these are defined in the global scope
        window.currentPeriod = 'daily';
        window.salesData = {
            daily: '<%- JSON.stringify(dailySales) %> ',
            weekly: '<%- JSON.stringify(weeklySales) %> ',
            monthly: '<%- JSON.stringify(monthlySales) %> ',
            yearly: '<%- JSON.stringify(yearlySales) %> '
        };

        // Add event listeners when the document loads
        document.addEventListener('DOMContentLoaded', function () {
            // Add click listeners to all period buttons
            document.querySelectorAll('.period-button').forEach(button => {
                button.addEventListener('click', function () {
                    const period = this.getAttribute('data-period');
                    changePeriod(period);
                });
            });
        });

        // Define the function in the global scope
        window.changePeriod = function (period) {
            try {
                currentPeriod = period;

                // Update active button
                document.querySelectorAll('.period-button').forEach(button => {
                    button.classList.remove('active');
                    if (button.getAttribute('data-period') === period) {
                        button.classList.add('active');
                    }
                });

                // Get the data for the selected period
                const data = salesData[period];
                console.log('Selected period:', period);
                console.log('Data for period:', data);

                // Update table
                const tbody = document.getElementById('salesTableBody');
                if (data) {
                    // Parse the JSON string into an array
                    const salesArray = JSON.parse(data);

                    if (salesArray && salesArray.length > 0) {
                        tbody.innerHTML = salesArray.map(row => {
                            let dateDisplay;
                            switch (period) {
                                case 'weekly':
                                    dateDisplay = `${row.startDate} - ${row.endDate}`;
                                    break;
                                case 'monthly':
                                    dateDisplay = `${row.month}/${row.year}`;
                                    break;
                                case 'yearly':
                                    dateDisplay = row.year;
                                    break;
                                default: // daily
                                    dateDisplay = row.date;
                            }

                            return `
                                <tr>
                                    <td>${dateDisplay}</td>
                                    <td>${row.totalOrders}</td>
                                    <td>₹${row.totalRevenue}</td>
                                    <td>₹${row.couponDiscount || 0}</td>
                                    <td>₹${row.totalProductDiscount || 0}</td>
                                </tr>
                            `;
                        }).join('');
                    } else {
                        tbody.innerHTML = `
                            <tr>
                                <td colspan="5" style="text-align: center;">No sales data available for ${period} period</td>
                            </tr>
                        `;
                    }
                } else {
                    tbody.innerHTML = `
                        <tr>
                            <td colspan="5" style="text-align: center;">No sales data available for ${period} period</td>
                        </tr>
                    `;
                }

                // Update pagination if needed


            } catch (error) {
                console.error('Error updating sales data:', error);
                console.log('Error details:', error.message);
                alert('Failed to update sales data. Please try again.');
            }
        };

        // For debugging
        console.log('Initial salesData:', salesData);

        // Define export function in the global scope
        window.exportReport = function (type) {
            if (type === 'pdf') {
                window.location.href = `/export-sales-report?period=${currentPeriod}`;
            } else {
                // Handle Excel export
            }
        };

        async function exportSalesReportToPDF() {
            try {
                // Create wrapper for PDF content
                const wrapper = document.createElement('div');
                wrapper.className = 'pdf-wrapper';

                // Add title
                const titleElement = document.createElement('h2');
                titleElement.textContent = `Sales Report (${currentPeriod.charAt(0).toUpperCase() + currentPeriod.slice(1)})`;
                titleElement.style.textAlign = 'center';
                titleElement.style.marginBottom = '20px';
                wrapper.appendChild(titleElement);

                // Create table
                const table = document.createElement('table');
                table.className = 'pdf-table';

                // Add table header
                const thead = document.createElement('thead');
                thead.innerHTML = `
                    <tr>
                        <th>Date</th>
                        <th>Orders</th>
                        <th>Revenue</th>
                        <th>Coupon Discount</th>
                        <th>Product Discount</th>
                    </tr>
                `;
                table.appendChild(thead);

                // Add table body with current period's data
                const tbody = document.createElement('tbody');
                const data = salesData[currentPeriod];

                if (data && data.length > 0) {
                    data.forEach(row => {
                        let dateDisplay;
                        switch (currentPeriod) {
                            case 'weekly':
                                dateDisplay = `${row.startDate} - ${row.endDate}`;
                                break;
                            case 'monthly':
                                dateDisplay = `${row.month}/${row.year}`;
                                break;
                            case 'yearly':
                                dateDisplay = row.year;
                                break;
                            default: // daily
                                dateDisplay = row.date;
                        }

                        const tr = document.createElement('tr');
                        tr.innerHTML = `
                            <td>${dateDisplay}</td>
                            <td>${row.totalOrders}</td>
                            <td>₹${row.totalRevenue}</td>
                            <td>₹${row.couponDiscount || 0}</td>
                            <td>₹${row.totalProductDiscount || 0}</td>
                        `;
                        tbody.appendChild(tr);
                    });
                } else {
                    tbody.innerHTML = `
                        <tr>
                            <td colspan="5" style="text-align: center;">No sales data available</td>
                        </tr>
                    `;
                }
                table.appendChild(tbody);
                wrapper.appendChild(table);

                // Add summary section
                const summarySection = document.createElement('div');
                summarySection.style.marginTop = '20px';
                summarySection.style.textAlign = 'right';
                summarySection.innerHTML = `
                    <p><strong>Total Orders:</strong> ${data.reduce((sum, row) => sum + row.totalOrders, 0)}</p>
                    <p><strong>Total Revenue:</strong> ₹${data.reduce((sum, row) => sum + parseFloat(row.totalRevenue), 0).toFixed(2)}</p>
                `;
                wrapper.appendChild(summarySection);

                // PDF export options
                const opt = {
                    margin: 0.5,
                    filename: `${currentPeriod}-sales-report.pdf`,
                    image: { type: 'jpeg', quality: 0.98 },
                    html2canvas: {
                        scale: 2,
                        logging: true,
                        letterRendering: true
                    },
                    jsPDF: {
                        unit: 'in',
                        format: 'a4',
                        orientation: 'landscape',
                        compress: true
                    }
                };

                // Generate and download PDF
                await html2pdf().set(opt).from(wrapper).save();

            } catch (error) {
                console.error('Error generating PDF:', error);
                alert('Failed to generate PDF. Please try again.');
            }
        }
    </script>
</body>

</html>