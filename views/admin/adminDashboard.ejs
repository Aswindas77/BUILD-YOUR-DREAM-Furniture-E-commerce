<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Admin Dashboard</title>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/html2pdf.js/0.10.1/html2pdf.bundle.min.js"></script>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
    <link rel="stylesheet" href="/public/adminAssets/css/adminDashboard.css">
    <style>
        .dashboard-title {
            text-align: center;
            color: #2c3e50;
            margin: 20px 0;
            font-size: 2.5rem;
            font-weight: 700;
            text-transform: uppercase;
            letter-spacing: 2px;
        }

        .summary-cards {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(280px, 1fr));
            gap: 25px;
            padding: 20px;
            max-width: 1400px;
            margin: 0 auto;
        }

        .card {
            background: white;
            border-radius: 20px;
            padding: 25px;
            box-shadow: 0 10px 20px rgba(0, 0, 0, 0.1);
            transition: all 0.3s ease;
            position: relative;
            overflow: hidden;
            display: flex;
            flex-direction: column;
            align-items: center;
            text-align: center;
        }



        .card::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 5px;
            background: linear-gradient(90deg, #3498db, #2ecc71);
        }

        .card i {
            font-size: 2.5rem;
            margin-bottom: 15px;
            background: #f8f9fa;
            padding: 15px;
            border-radius: 50%;
            color: #2c3e50;
        }

        .users-card i {
            color: #3498db;
        }

        .orders-card i {
            color: #2ecc71;
        }

        .products-card i {
            color: #e74c3c;
        }

        .delivered-card i {
            color: #9b59b6;
        }

        .revenue-card i {
            color: #f1c40f;
        }

        .returns-card i {
            color: #e67e22;
        }

        .card-title {
            font-size: 1.1rem;
            color: #7f8c8d;
            margin-bottom: 10px;
            font-weight: 600;
            text-transform: uppercase;
            letter-spacing: 1px;
        }

        .card-value {
            font-size: 2rem;
            font-weight: 700;
            color: #2c3e50;
            margin-top: 5px;
        }

        @media (max-width: 768px) {
            .summary-cards {
                grid-template-columns: repeat(auto-fit, minmax(240px, 1fr));
                gap: 15px;
                padding: 15px;
            }

            .card {
                padding: 20px;
            }

            .card-value {
                font-size: 1.5rem;
            }
        }

        .top-selling-container {
            display: grid;
            grid-template-columns: repeat(2, 1fr);
            gap: 25px;
            padding: 20px;
            max-width: 1400px;
            margin: 20px auto;
        }

        .top-box {
            background: white;
            border-radius: 20px;
            box-shadow: 0 10px 20px rgba(0, 0, 0, 0.1);
            overflow: hidden;
            height: 600px;
            display: flex;
            flex-direction: column;
        }

        .top-box-header {
            padding: 20px;
            background: linear-gradient(to right, #3498db, #2ecc71);
            color: white;
        }

        .top-box-header h3 {
            margin: 0;
            font-size: 1.3rem;
            display: flex;
            align-items: center;
            gap: 10px;
        }

        .top-box-content {
            padding: 20px;
            overflow-y: auto;
            flex-grow: 1;
        }

        .top-item {
            display: flex;
            justify-content: space-between;
            align-items: center;
            padding: 15px;
            border-bottom: 1px solid #eee;
            transition: all 0.3s ease;
        }

        .top-item:hover {
            background: #f8f9fa;
            transform: translateX(5px);
        }

        .item-info {
            display: flex;
            align-items: center;
            gap: 15px;
            flex: 1;
        }

        .item-image,
        .category-icon {
            width: 60px;
            height: 60px;
            border-radius: 12px;
            overflow: hidden;
            display: flex;
            align-items: center;
            justify-content: center;
            background: #f0f2f5;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
        }

        .item-image img {
            width: 100%;
            height: 100%;
            object-fit: cover;
        }

        .category-icon i {
            font-size: 1.8rem;
            color: #3498db;
        }

        .item-details {
            flex: 1;
        }

        .item-details h4 {
            margin: 0;
            font-size: 1.1rem;
            color: #2c3e50;
            font-weight: 600;
        }

        .item-price,
        .item-count {
            color: #7f8c8d;
            font-size: 0.95rem;
            margin: 5px 0 0 0;
        }

        .item-stats {
            display: flex;
            flex-direction: column;
            align-items: flex-end;
            gap: 8px;
            min-width: 120px;
        }

        .sales-count {
            font-size: 0.95rem;
            color: #2c3e50;
            font-weight: 500;
        }

        .progress-bar {
            width: 100px;
            height: 6px;
            background: #eee;
            border-radius: 3px;
            overflow: hidden;
        }

        .progress {
            height: 100%;
            background: linear-gradient(to right, #3498db, #2ecc71);
            border-radius: 3px;
            transition: width 0.3s ease;
        }

        .no-data {
            text-align: center;
            padding: 40px 20px;
            color: #7f8c8d;
        }

        .no-data i {
            font-size: 3rem;
            margin-bottom: 15px;
            color: #bdc3c7;
        }

        @media (max-width: 768px) {
            .top-selling-container {
                grid-template-columns: 1fr;
            }

            .top-box {
                height: 500px;
            }

            .item-stats {
                min-width: 90px;
            }
        }

        .graph-container {
            padding: 20px;
            max-width: 1400px;
            margin: 20px auto;
        }

        .graph-card {
            background: white;
            border-radius: 20px;
            box-shadow: 0 10px 20px rgba(0, 0, 0, 0.1);
            overflow: hidden;
        }

        .graph-header {
            padding: 20px;
            background: linear-gradient(to right, #3498db, #2ecc71);
            color: white;
            display: flex;
            justify-content: space-between;
            align-items: center;
        }

        .graph-title {
            margin: 0;
            font-size: 1.3rem;
            font-weight: 600;
        }

        .period-selector {
            display: flex;
            gap: 10px;
        }

        .period-btn {
            padding: 8px 16px;
            border: none;
            border-radius: 20px;
            background: rgba(255, 255, 255, 0.2);
            color: white;
            cursor: pointer;
            transition: all 0.3s ease;
            font-weight: 500;
        }

        .period-btn:hover {
            background: rgba(255, 255, 255, 0.3);
        }

        .period-btn.active {
            background: white;
            color: #2c3e50;
        }

        .graph-content {
            padding: 20px;
            height: 400px;
        }

        @media (max-width: 768px) {
            .graph-header {
                flex-direction: column;
                gap: 15px;
            }

            .period-selector {
                width: 100%;
                justify-content: center;
                flex-wrap: wrap;
            }

            .graph-content {
                height: 300px;
            }
        }
    </style>
</head>

<body>
    <h1 class="dashboard-title">Dashboard</h1>


    <div class="summary-cards">
        <div class="card users-card">
            <i class="fas fa-users"></i>
            <div class="card-title">Total Users</div>
            <div class="card-value">
                <%= totalUsers %>
            </div>
        </div>
        <div class="card orders-card">
            <i class="fas fa-shopping-cart"></i>
            <div class="card-title">Total Orders</div>
            <div class="card-value">
                <%= totalOrders %>
            </div>
        </div>
        <div class="card products-card">
            <i class="fas fa-box"></i>
            <div class="card-title">Total Products</div>
            <div class="card-value">
                <%= totalProducts %>
            </div>
        </div>
        <div class="card delivered-card">
            <i class="fas fa-truck"></i>
            <div class="card-title">Delivered Products</div>
            <div class="card-value">
                <%= totalDeliveredProducts %>
            </div>
        </div>
        <div class="card revenue-card">
            <i class="fas fa-rupee-sign"></i>
            <div class="card-title">Total Revenue</div>
            <div class="card-value">â‚¹<%= Number(totalRevenue).toFixed(2) %>
            </div>
        </div>
        <div class="card returns-card">
            <i class="fas fa-undo"></i>
            <div class="card-title">Total Returns</div>
            <div class="card-value">
                <%= totalReturns %>
            </div>
        </div>
    </div>



    <!-- Graph Section -->
    <div class="graph-container">
        <div class="graph-card">
            <div class="graph-header">
                <h3 class="graph-title">Sales & Revenue Overview</h3>
                <div class="period-selector">
                    <button class="period-btn active" data-period="daily">Daily</button>
                    <button class="period-btn" data-period="weekly">Weekly</button>
                    <button class="period-btn" data-period="monthly">Monthly</button>
                    <button class="period-btn" data-period="yearly">Yearly</button>
                </div>
            </div>
            <div class="graph-content">
                <canvas id="salesRevenueChart"></canvas>
            </div>
        </div>
    </div>

    <div class="top-selling-container">

        <div class="top-box products-box">
            <div class="top-box-header">
                <h3><i class="fas fa-crown"></i> Top 10 Selling Products</h3>
            </div>
            <div class="top-box-content">
                <% if (typeof topProducts !=='undefined' && topProducts.length> 0) { %>
                    <% topProducts.forEach(product=> { %>
                        <div class="top-item">
                            <div class="item-info">
                                <div class="item-image">
                                    <img src="<%= product.images[0] %>" alt="<%= product.name %>">
                                </div>
                                <div class="item-details">
                                    <h4>
                                        <%= product.name %>
                                    </h4>

                                </div>
                            </div>
                            <div class="item-stats">
                                <span class="sales-count">
                                    <%= product.soldCount %> sold
                                </span>

                            </div>
                        </div>
                        <% }); %>
                            <% } else { %>
                                <div class="no-data">
                                    <i class="fas fa-box-open"></i>
                                    <p>No product data available</p>
                                </div>
                                <% } %>
            </div>
        </div>


        <div class="top-box categories-box">
            <div class="top-box-header">
                <h3><i class="fas fa-chart-pie"></i> Top 10 Categories</h3>
            </div>
            <div class="top-box-content">
                <% if (typeof topCategories !=='undefined' && topCategories.length> 0) { %>
                    <% topCategories.forEach(category=> { %>
                        <div class="top-item">
                            <div class="item-info">

                                <div class="item-details">
                                    <h4>
                                        <%= category.name %>
                                    </h4>
                                    <p class="item-count">
                                        <%= category.productCount %> products
                                    </p>
                                </div>
                            </div>
                            <div class="item-stats">
                                <span class="sales-count">
                                    <%= category.totalSales %> sales
                                </span>

                            </div>
                        </div>
                        <% }); %>
                            <% } else { %>
                                <div class="no-data">
                                    <i class="fas fa-folders"></i>
                                    <p>No category data available</p>
                                </div>
                                <% } %>
            </div>
        </div>
    </div>





    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>

    <script>
        document.addEventListener('DOMContentLoaded', function () {
            let salesRevenueChart = null;

            function formatCurrency(amount) {
                return 'â‚¹' + Number(amount).toLocaleString('en-IN');
            }

            async function updateChart(period) {
                try {
                    const response = await fetch(`/admin/dashboard/analytics/${period}`);
                    if (!response.ok) throw new Error('Failed to fetch data');
                    const data = await response.json();
                    console.log('API Response:', data); 

                    if (salesRevenueChart) {
                        salesRevenueChart.destroy();
                    }

                    const chart = document.getElementById('salesRevenueChart').getContext('2d');
                    salesRevenueChart = new Chart(chart, {
                        type: 'line',
                        data: {
                            labels: data.labels,
                            datasets: [
                                {
                                    label: 'Sales',
                                    data: data.sales,
                                    borderColor: '#3498db',
                                    backgroundColor: 'rgba(52, 152, 219, 0.2)',
                                    fill: false, // Changed to false to prevent overlap
                                    tension: 0.4,
                                    pointRadius: 4,
                                    pointBackgroundColor: '#3498db',
                                    borderWidth: 2
                                },
                                {
                                    label: 'Revenue (â‚¹)',
                                    data: data.revenue,
                                    borderColor: '#2ecc71',
                                    backgroundColor: 'rgba(46, 204, 113, 0.2)',
                                    fill: false,
                                    tension: 0.4,
                                    pointRadius: 4,
                                    pointBackgroundColor: '#2ecc71',
                                    borderWidth: 2
                                }
                            ]
                        },
                        options: {
                            responsive: true,
                            maintainAspectRatio: false,
                            interaction: {
                                intersect: false,
                                mode: 'index'
                            },
                            plugins: {
                                legend: {
                                    position: 'top',
                                    labels: {
                                        font: { size: 12, weight: 'bold' },
                                        padding: 20
                                    }
                                },
                                tooltip: {
                                    callbacks: {
                                        label: function (context) {
                                            let label = context.dataset.label || '';
                                            if (label) label += ': ';
                                            if (label.includes('Revenue')) {
                                                label += formatCurrency(context.parsed.y);
                                            } else {
                                                label += context.parsed.y;
                                            }
                                            return label;
                                        }
                                    }
                                }
                            },
                            scales: {
                                x: { grid: { display: false }, ticks: { font: { size: 11 } } },
                                y: {
                                    beginAtZero: true,
                                    grid: { color: 'rgba(0, 0, 0, 0.1)' },
                                    ticks: {
                                        font: { size: 11 },
                                        callback: function (value) { return formatCurrency(value); }
                                    }
                                }
                            }
                        }
                    });
                } catch (error) {
                    console.error('Error updating chart:', error);
                }
            }

            document.querySelectorAll('.period-btn').forEach(button => {
                button.addEventListener('click', function () {
                    document.querySelectorAll('.period-btn').forEach(btn => btn.classList.remove('active'));
                    this.classList.add('active');
                    updateChart(this.dataset.period);
                });
            });

            updateChart('daily');
        });
    </script>
</body>

</html>